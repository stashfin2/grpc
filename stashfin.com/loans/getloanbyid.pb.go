// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.19.6
// source: loans/getloanbyid.proto

package loans

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLoanByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LoanId        int32                  `protobuf:"varint,1,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLoanByIdRequest) Reset() {
	*x = GetLoanByIdRequest{}
	mi := &file_loans_getloanbyid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoanByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanByIdRequest) ProtoMessage() {}

func (x *GetLoanByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loans_getloanbyid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanByIdRequest.ProtoReflect.Descriptor instead.
func (*GetLoanByIdRequest) Descriptor() ([]byte, []int) {
	return file_loans_getloanbyid_proto_rawDescGZIP(), []int{0}
}

func (x *GetLoanByIdRequest) GetLoanId() int32 {
	if x != nil {
		return x.LoanId
	}
	return 0
}

type GetLoanByIdResponse struct {
	state                 protoimpl.MessageState     `protogen:"open.v1"`
	Category              string                     `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	DisbursalAmount       int32                      `protobuf:"varint,2,opt,name=disbursal_amount,json=disbursalAmount,proto3" json:"disbursal_amount,omitempty"`
	Roi                   float32                    `protobuf:"fixed32,3,opt,name=roi,proto3" json:"roi,omitempty"`
	LoanDisbursalDate     string                     `protobuf:"bytes,4,opt,name=Loan_disbursal_date,json=LoanDisbursalDate,proto3" json:"Loan_disbursal_date,omitempty"`
	ApprovedDisbursalDate string                     `protobuf:"bytes,5,opt,name=approved_disbursal_date,json=approvedDisbursalDate,proto3" json:"approved_disbursal_date,omitempty"`
	ApprovedAmount        int32                      `protobuf:"varint,6,opt,name=approved_amount,json=approvedAmount,proto3" json:"approved_amount,omitempty"`
	LoanStatus            string                     `protobuf:"bytes,7,opt,name=loan_status,json=loanStatus,proto3" json:"loan_status,omitempty"`
	UpfrontInterest       float32                    `protobuf:"fixed32,8,opt,name=upfront_interest,json=upfrontInterest,proto3" json:"upfront_interest,omitempty"`
	InstAmount            int32                      `protobuf:"varint,9,opt,name=inst_amount,json=instAmount,proto3" json:"inst_amount,omitempty"`
	InstDate              string                     `protobuf:"bytes,10,opt,name=inst_date,json=instDate,proto3" json:"inst_date,omitempty"`
	Tenure                int32                      `protobuf:"varint,11,opt,name=tenure,proto3" json:"tenure,omitempty"`
	DailyRoi              float32                    `protobuf:"fixed32,12,opt,name=daily_roi,json=dailyRoi,proto3" json:"daily_roi,omitempty"`
	ApprovalDate          string                     `protobuf:"bytes,13,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	ProcessingFee         int32                      `protobuf:"varint,14,opt,name=processing_fee,json=processingFee,proto3" json:"processing_fee,omitempty"`
	ColenderId            int32                      `protobuf:"varint,15,opt,name=colenderId,proto3" json:"colenderId,omitempty"`
	Fees                  *GetLoanByIdResponse_Field `protobuf:"bytes,16,opt,name=fees,proto3" json:"fees,omitempty"`
	LoanCreateDate        string                     `protobuf:"bytes,17,opt,name=loan_create_date,json=loanCreateDate,proto3" json:"loan_create_date,omitempty"`
	NetPayableAmount      int32                      `protobuf:"varint,18,opt,name=net_payable_amount,json=netPayableAmount,proto3" json:"net_payable_amount,omitempty"`
	AprValue              float32                    `protobuf:"fixed32,19,opt,name=apr_value,json=aprValue,proto3" json:"apr_value,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetLoanByIdResponse) Reset() {
	*x = GetLoanByIdResponse{}
	mi := &file_loans_getloanbyid_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoanByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanByIdResponse) ProtoMessage() {}

func (x *GetLoanByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loans_getloanbyid_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanByIdResponse.ProtoReflect.Descriptor instead.
func (*GetLoanByIdResponse) Descriptor() ([]byte, []int) {
	return file_loans_getloanbyid_proto_rawDescGZIP(), []int{1}
}

func (x *GetLoanByIdResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetLoanByIdResponse) GetDisbursalAmount() int32 {
	if x != nil {
		return x.DisbursalAmount
	}
	return 0
}

func (x *GetLoanByIdResponse) GetRoi() float32 {
	if x != nil {
		return x.Roi
	}
	return 0
}

func (x *GetLoanByIdResponse) GetLoanDisbursalDate() string {
	if x != nil {
		return x.LoanDisbursalDate
	}
	return ""
}

func (x *GetLoanByIdResponse) GetApprovedDisbursalDate() string {
	if x != nil {
		return x.ApprovedDisbursalDate
	}
	return ""
}

func (x *GetLoanByIdResponse) GetApprovedAmount() int32 {
	if x != nil {
		return x.ApprovedAmount
	}
	return 0
}

func (x *GetLoanByIdResponse) GetLoanStatus() string {
	if x != nil {
		return x.LoanStatus
	}
	return ""
}

func (x *GetLoanByIdResponse) GetUpfrontInterest() float32 {
	if x != nil {
		return x.UpfrontInterest
	}
	return 0
}

func (x *GetLoanByIdResponse) GetInstAmount() int32 {
	if x != nil {
		return x.InstAmount
	}
	return 0
}

func (x *GetLoanByIdResponse) GetInstDate() string {
	if x != nil {
		return x.InstDate
	}
	return ""
}

func (x *GetLoanByIdResponse) GetTenure() int32 {
	if x != nil {
		return x.Tenure
	}
	return 0
}

func (x *GetLoanByIdResponse) GetDailyRoi() float32 {
	if x != nil {
		return x.DailyRoi
	}
	return 0
}

func (x *GetLoanByIdResponse) GetApprovalDate() string {
	if x != nil {
		return x.ApprovalDate
	}
	return ""
}

func (x *GetLoanByIdResponse) GetProcessingFee() int32 {
	if x != nil {
		return x.ProcessingFee
	}
	return 0
}

func (x *GetLoanByIdResponse) GetColenderId() int32 {
	if x != nil {
		return x.ColenderId
	}
	return 0
}

func (x *GetLoanByIdResponse) GetFees() *GetLoanByIdResponse_Field {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *GetLoanByIdResponse) GetLoanCreateDate() string {
	if x != nil {
		return x.LoanCreateDate
	}
	return ""
}

func (x *GetLoanByIdResponse) GetNetPayableAmount() int32 {
	if x != nil {
		return x.NetPayableAmount
	}
	return 0
}

func (x *GetLoanByIdResponse) GetAprValue() float32 {
	if x != nil {
		return x.AprValue
	}
	return 0
}

type GetLoanByIdResponse_Field struct {
	state            protoimpl.MessageState             `protogen:"open.v1"`
	ProcessingFee    int32                              `protobuf:"varint,1,opt,name=processing_fee,json=processingFee,proto3" json:"processing_fee,omitempty"`
	TxnFee           int32                              `protobuf:"varint,2,opt,name=txn_fee,json=txnFee,proto3" json:"txn_fee,omitempty"`
	ProcessingFeeGst int32                              `protobuf:"varint,3,opt,name=processing_fee_gst,json=processingFeeGst,proto3" json:"processing_fee_gst,omitempty"`
	TxnFeeGst        int32                              `protobuf:"varint,4,opt,name=txn_fee_gst,json=txnFeeGst,proto3" json:"txn_fee_gst,omitempty"`
	Addons           []*GetLoanByIdResponse_Field_Field `protobuf:"bytes,5,rep,name=addons,proto3" json:"addons,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetLoanByIdResponse_Field) Reset() {
	*x = GetLoanByIdResponse_Field{}
	mi := &file_loans_getloanbyid_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoanByIdResponse_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanByIdResponse_Field) ProtoMessage() {}

func (x *GetLoanByIdResponse_Field) ProtoReflect() protoreflect.Message {
	mi := &file_loans_getloanbyid_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanByIdResponse_Field.ProtoReflect.Descriptor instead.
func (*GetLoanByIdResponse_Field) Descriptor() ([]byte, []int) {
	return file_loans_getloanbyid_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetLoanByIdResponse_Field) GetProcessingFee() int32 {
	if x != nil {
		return x.ProcessingFee
	}
	return 0
}

func (x *GetLoanByIdResponse_Field) GetTxnFee() int32 {
	if x != nil {
		return x.TxnFee
	}
	return 0
}

func (x *GetLoanByIdResponse_Field) GetProcessingFeeGst() int32 {
	if x != nil {
		return x.ProcessingFeeGst
	}
	return 0
}

func (x *GetLoanByIdResponse_Field) GetTxnFeeGst() int32 {
	if x != nil {
		return x.TxnFeeGst
	}
	return 0
}

func (x *GetLoanByIdResponse_Field) GetAddons() []*GetLoanByIdResponse_Field_Field {
	if x != nil {
		return x.Addons
	}
	return nil
}

type GetLoanByIdResponse_Field_Field struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLoanByIdResponse_Field_Field) Reset() {
	*x = GetLoanByIdResponse_Field_Field{}
	mi := &file_loans_getloanbyid_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoanByIdResponse_Field_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanByIdResponse_Field_Field) ProtoMessage() {}

func (x *GetLoanByIdResponse_Field_Field) ProtoReflect() protoreflect.Message {
	mi := &file_loans_getloanbyid_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanByIdResponse_Field_Field.ProtoReflect.Descriptor instead.
func (*GetLoanByIdResponse_Field_Field) Descriptor() ([]byte, []int) {
	return file_loans_getloanbyid_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *GetLoanByIdResponse_Field_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetLoanByIdResponse_Field_Field) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_loans_getloanbyid_proto protoreflect.FileDescriptor

var file_loans_getloanbyid_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x6c, 0x6f, 0x61, 0x6e, 0x62,
	0x79, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x6f, 0x61, 0x6e, 0x73,
	0x2e, 0x67, 0x65, 0x74, 0x6c, 0x6f, 0x61, 0x6e, 0x62, 0x79, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x12,
	0x67, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xfa, 0x07, 0x0a, 0x13,
	0x67, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x62, 0x75,
	0x72, 0x73, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x6f, 0x69, 0x12, 0x2e, 0x0a, 0x13,
	0x4c, 0x6f, 0x61, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4c, 0x6f, 0x61, 0x6e, 0x44,
	0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73,
	0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x75, 0x70, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x75, 0x70, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x75, 0x72,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x75, 0x72, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x72, 0x6f, 0x69, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x6f, 0x69, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x2e, 0x67,
	0x65, 0x74, 0x6c, 0x6f, 0x61, 0x6e, 0x62, 0x79, 0x69, 0x64, 0x2e, 0x67, 0x65, 0x74, 0x4c, 0x6f,
	0x61, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f,
	0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x6e, 0x65, 0x74, 0x50, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x70, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x96, 0x02, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x78, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x67, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x46, 0x65, 0x65, 0x47, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x78, 0x6e, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x67, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x78,
	0x6e, 0x46, 0x65, 0x65, 0x47, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x2e,
	0x67, 0x65, 0x74, 0x6c, 0x6f, 0x61, 0x6e, 0x62, 0x79, 0x69, 0x64, 0x2e, 0x67, 0x65, 0x74, 0x4c,
	0x6f, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x73, 0x1a, 0x33, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_loans_getloanbyid_proto_rawDescOnce sync.Once
	file_loans_getloanbyid_proto_rawDescData []byte
)

func file_loans_getloanbyid_proto_rawDescGZIP() []byte {
	file_loans_getloanbyid_proto_rawDescOnce.Do(func() {
		file_loans_getloanbyid_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_loans_getloanbyid_proto_rawDesc), len(file_loans_getloanbyid_proto_rawDesc)))
	})
	return file_loans_getloanbyid_proto_rawDescData
}

var file_loans_getloanbyid_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_loans_getloanbyid_proto_goTypes = []any{
	(*GetLoanByIdRequest)(nil),              // 0: loans.getloanbyid.getLoanByIdRequest
	(*GetLoanByIdResponse)(nil),             // 1: loans.getloanbyid.getLoanByIdResponse
	(*GetLoanByIdResponse_Field)(nil),       // 2: loans.getloanbyid.getLoanByIdResponse.Field
	(*GetLoanByIdResponse_Field_Field)(nil), // 3: loans.getloanbyid.getLoanByIdResponse.Field.Field
}
var file_loans_getloanbyid_proto_depIdxs = []int32{
	2, // 0: loans.getloanbyid.getLoanByIdResponse.fees:type_name -> loans.getloanbyid.getLoanByIdResponse.Field
	3, // 1: loans.getloanbyid.getLoanByIdResponse.Field.addons:type_name -> loans.getloanbyid.getLoanByIdResponse.Field.Field
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_loans_getloanbyid_proto_init() }
func file_loans_getloanbyid_proto_init() {
	if File_loans_getloanbyid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_loans_getloanbyid_proto_rawDesc), len(file_loans_getloanbyid_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_loans_getloanbyid_proto_goTypes,
		DependencyIndexes: file_loans_getloanbyid_proto_depIdxs,
		MessageInfos:      file_loans_getloanbyid_proto_msgTypes,
	}.Build()
	File_loans_getloanbyid_proto = out.File
	file_loans_getloanbyid_proto_goTypes = nil
	file_loans_getloanbyid_proto_depIdxs = nil
}
