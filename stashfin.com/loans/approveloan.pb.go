// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: loans/approveloan.proto

package loans

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApproveLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankId     int32                       `protobuf:"varint,1,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
	Amount     int32                       `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Tenure     int32                       `protobuf:"varint,3,opt,name=tenure,proto3" json:"tenure,omitempty"`
	Ip         string                      `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	AddonsData []*ApproveLoanRequest_Field `protobuf:"bytes,5,rep,name=addonsData,proto3" json:"addonsData,omitempty"`
	Latitude   float32                     `protobuf:"fixed32,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude  float32                     `protobuf:"fixed32,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *ApproveLoanRequest) Reset() {
	*x = ApproveLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loans_approveloan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveLoanRequest) ProtoMessage() {}

func (x *ApproveLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loans_approveloan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveLoanRequest.ProtoReflect.Descriptor instead.
func (*ApproveLoanRequest) Descriptor() ([]byte, []int) {
	return file_loans_approveloan_proto_rawDescGZIP(), []int{0}
}

func (x *ApproveLoanRequest) GetBankId() int32 {
	if x != nil {
		return x.BankId
	}
	return 0
}

func (x *ApproveLoanRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ApproveLoanRequest) GetTenure() int32 {
	if x != nil {
		return x.Tenure
	}
	return 0
}

func (x *ApproveLoanRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ApproveLoanRequest) GetAddonsData() []*ApproveLoanRequest_Field {
	if x != nil {
		return x.AddonsData
	}
	return nil
}

func (x *ApproveLoanRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ApproveLoanRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type ApproveLoanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayFees              int32   `protobuf:"varint,1,opt,name=gateway_fees,json=gatewayFees,proto3" json:"gateway_fees,omitempty"`
	StrikedGatewayFees       int32   `protobuf:"varint,2,opt,name=striked_gateway_fees,json=strikedGatewayFees,proto3" json:"striked_gateway_fees,omitempty"`
	BillDate                 string  `protobuf:"bytes,3,opt,name=bill_date,json=billDate,proto3" json:"bill_date,omitempty"`
	RequestedAmount          int32   `protobuf:"varint,4,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	Tenure                   int32   `protobuf:"varint,5,opt,name=tenure,proto3" json:"tenure,omitempty"`
	EmiAmount                int32   `protobuf:"varint,6,opt,name=emi_amount,json=emiAmount,proto3" json:"emi_amount,omitempty"`
	NetAmountPayable         int32   `protobuf:"varint,7,opt,name=net_amount_payable,json=netAmountPayable,proto3" json:"net_amount_payable,omitempty"`
	FirstEmiDate             string  `protobuf:"bytes,8,opt,name=first_emi_date,json=firstEmiDate,proto3" json:"first_emi_date,omitempty"`
	FinalDisbursalAmount     int32   `protobuf:"varint,9,opt,name=final_disbursal_amount,json=finalDisbursalAmount,proto3" json:"final_disbursal_amount,omitempty"`
	UpfrontInterest          int32   `protobuf:"varint,10,opt,name=upfront_interest,json=upfrontInterest,proto3" json:"upfront_interest,omitempty"`
	RateOfInterest           float32 `protobuf:"fixed32,11,opt,name=rate_of_interest,json=rateOfInterest,proto3" json:"rate_of_interest,omitempty"`
	BillAmount               int32   `protobuf:"varint,12,opt,name=bill_amount,json=billAmount,proto3" json:"bill_amount,omitempty"`
	TotalInterestPay         int32   `protobuf:"varint,13,opt,name=total_interest_pay,json=totalInterestPay,proto3" json:"total_interest_pay,omitempty"`
	EffectiveAnnualRate      int32   `protobuf:"varint,14,opt,name=effective_annual_rate,json=effectiveAnnualRate,proto3" json:"effective_annual_rate,omitempty"`
	TransactionFeeBillAmount int32   `protobuf:"varint,15,opt,name=transaction_fee_bill_amount,json=transactionFeeBillAmount,proto3" json:"transaction_fee_bill_amount,omitempty"`
	ProcessingFeePlusGst     int32   `protobuf:"varint,16,opt,name=processing_fee_plus_gst,json=processingFeePlusGst,proto3" json:"processing_fee_plus_gst,omitempty"`
	TransFeePlusGst          int32   `protobuf:"varint,17,opt,name=trans_fee_plus_gst,json=transFeePlusGst,proto3" json:"trans_fee_plus_gst,omitempty"`
	FeeAndCharges            int32   `protobuf:"varint,18,opt,name=fee_and_charges,json=feeAndCharges,proto3" json:"fee_and_charges,omitempty"`
	FeeAndChargesBill        int32   `protobuf:"varint,19,opt,name=fee_and_charges_bill,json=feeAndChargesBill,proto3" json:"fee_and_charges_bill,omitempty"`
	EffectiveRoi             int32   `protobuf:"varint,20,opt,name=effective_roi,json=effectiveRoi,proto3" json:"effective_roi,omitempty"`
	EffectiveAnnualRoi       int32   `protobuf:"varint,21,opt,name=effective_annual_roi,json=effectiveAnnualRoi,proto3" json:"effective_annual_roi,omitempty"`
	EmiCardDescription       string  `protobuf:"bytes,22,opt,name=emi_card_description,json=emiCardDescription,proto3" json:"emi_card_description,omitempty"`
	BillCardDescription      string  `protobuf:"bytes,23,opt,name=bill_card_description,json=billCardDescription,proto3" json:"bill_card_description,omitempty"`
	AprValue                 float32 `protobuf:"fixed32,24,opt,name=apr_value,json=aprValue,proto3" json:"apr_value,omitempty"`
	AprType                  string  `protobuf:"bytes,25,opt,name=apr_type,json=aprType,proto3" json:"apr_type,omitempty"`
	MaxAmount                float32 `protobuf:"fixed32,26,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	CreditReportFees         int32   `protobuf:"varint,27,opt,name=credit_report_fees,json=creditReportFees,proto3" json:"credit_report_fees,omitempty"`
	CreditReportActualFees   int32   `protobuf:"varint,28,opt,name=credit_report_actual_fees,json=creditReportActualFees,proto3" json:"credit_report_actual_fees,omitempty"`
	PlanId                   int32   `protobuf:"varint,29,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	ApprovedAmount           int32   `protobuf:"varint,30,opt,name=approved_amount,json=approvedAmount,proto3" json:"approved_amount,omitempty"`
	Discount                 int32   `protobuf:"varint,31,opt,name=discount,proto3" json:"discount,omitempty"`
	ErrorCode                *string `protobuf:"bytes,32,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	BillTxnPlusGst           int32   `protobuf:"varint,33,opt,name=bill_txn_plus_gst,json=billTxnPlusGst,proto3" json:"bill_txn_plus_gst,omitempty"`
}

func (x *ApproveLoanResponse) Reset() {
	*x = ApproveLoanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loans_approveloan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveLoanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveLoanResponse) ProtoMessage() {}

func (x *ApproveLoanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loans_approveloan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveLoanResponse.ProtoReflect.Descriptor instead.
func (*ApproveLoanResponse) Descriptor() ([]byte, []int) {
	return file_loans_approveloan_proto_rawDescGZIP(), []int{1}
}

func (x *ApproveLoanResponse) GetGatewayFees() int32 {
	if x != nil {
		return x.GatewayFees
	}
	return 0
}

func (x *ApproveLoanResponse) GetStrikedGatewayFees() int32 {
	if x != nil {
		return x.StrikedGatewayFees
	}
	return 0
}

func (x *ApproveLoanResponse) GetBillDate() string {
	if x != nil {
		return x.BillDate
	}
	return ""
}

func (x *ApproveLoanResponse) GetRequestedAmount() int32 {
	if x != nil {
		return x.RequestedAmount
	}
	return 0
}

func (x *ApproveLoanResponse) GetTenure() int32 {
	if x != nil {
		return x.Tenure
	}
	return 0
}

func (x *ApproveLoanResponse) GetEmiAmount() int32 {
	if x != nil {
		return x.EmiAmount
	}
	return 0
}

func (x *ApproveLoanResponse) GetNetAmountPayable() int32 {
	if x != nil {
		return x.NetAmountPayable
	}
	return 0
}

func (x *ApproveLoanResponse) GetFirstEmiDate() string {
	if x != nil {
		return x.FirstEmiDate
	}
	return ""
}

func (x *ApproveLoanResponse) GetFinalDisbursalAmount() int32 {
	if x != nil {
		return x.FinalDisbursalAmount
	}
	return 0
}

func (x *ApproveLoanResponse) GetUpfrontInterest() int32 {
	if x != nil {
		return x.UpfrontInterest
	}
	return 0
}

func (x *ApproveLoanResponse) GetRateOfInterest() float32 {
	if x != nil {
		return x.RateOfInterest
	}
	return 0
}

func (x *ApproveLoanResponse) GetBillAmount() int32 {
	if x != nil {
		return x.BillAmount
	}
	return 0
}

func (x *ApproveLoanResponse) GetTotalInterestPay() int32 {
	if x != nil {
		return x.TotalInterestPay
	}
	return 0
}

func (x *ApproveLoanResponse) GetEffectiveAnnualRate() int32 {
	if x != nil {
		return x.EffectiveAnnualRate
	}
	return 0
}

func (x *ApproveLoanResponse) GetTransactionFeeBillAmount() int32 {
	if x != nil {
		return x.TransactionFeeBillAmount
	}
	return 0
}

func (x *ApproveLoanResponse) GetProcessingFeePlusGst() int32 {
	if x != nil {
		return x.ProcessingFeePlusGst
	}
	return 0
}

func (x *ApproveLoanResponse) GetTransFeePlusGst() int32 {
	if x != nil {
		return x.TransFeePlusGst
	}
	return 0
}

func (x *ApproveLoanResponse) GetFeeAndCharges() int32 {
	if x != nil {
		return x.FeeAndCharges
	}
	return 0
}

func (x *ApproveLoanResponse) GetFeeAndChargesBill() int32 {
	if x != nil {
		return x.FeeAndChargesBill
	}
	return 0
}

func (x *ApproveLoanResponse) GetEffectiveRoi() int32 {
	if x != nil {
		return x.EffectiveRoi
	}
	return 0
}

func (x *ApproveLoanResponse) GetEffectiveAnnualRoi() int32 {
	if x != nil {
		return x.EffectiveAnnualRoi
	}
	return 0
}

func (x *ApproveLoanResponse) GetEmiCardDescription() string {
	if x != nil {
		return x.EmiCardDescription
	}
	return ""
}

func (x *ApproveLoanResponse) GetBillCardDescription() string {
	if x != nil {
		return x.BillCardDescription
	}
	return ""
}

func (x *ApproveLoanResponse) GetAprValue() float32 {
	if x != nil {
		return x.AprValue
	}
	return 0
}

func (x *ApproveLoanResponse) GetAprType() string {
	if x != nil {
		return x.AprType
	}
	return ""
}

func (x *ApproveLoanResponse) GetMaxAmount() float32 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *ApproveLoanResponse) GetCreditReportFees() int32 {
	if x != nil {
		return x.CreditReportFees
	}
	return 0
}

func (x *ApproveLoanResponse) GetCreditReportActualFees() int32 {
	if x != nil {
		return x.CreditReportActualFees
	}
	return 0
}

func (x *ApproveLoanResponse) GetPlanId() int32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *ApproveLoanResponse) GetApprovedAmount() int32 {
	if x != nil {
		return x.ApprovedAmount
	}
	return 0
}

func (x *ApproveLoanResponse) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *ApproveLoanResponse) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *ApproveLoanResponse) GetBillTxnPlusGst() int32 {
	if x != nil {
		return x.BillTxnPlusGst
	}
	return 0
}

type ApproveLoanRequest_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount   int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PlanId   int32  `protobuf:"varint,3,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Discount int32  `protobuf:"varint,4,opt,name=discount,proto3" json:"discount,omitempty"`
}

func (x *ApproveLoanRequest_Field) Reset() {
	*x = ApproveLoanRequest_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loans_approveloan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveLoanRequest_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveLoanRequest_Field) ProtoMessage() {}

func (x *ApproveLoanRequest_Field) ProtoReflect() protoreflect.Message {
	mi := &file_loans_approveloan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveLoanRequest_Field.ProtoReflect.Descriptor instead.
func (*ApproveLoanRequest_Field) Descriptor() ([]byte, []int) {
	return file_loans_approveloan_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ApproveLoanRequest_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApproveLoanRequest_Field) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ApproveLoanRequest_Field) GetPlanId() int32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *ApproveLoanRequest_Field) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

var File_loans_approveloan_proto protoreflect.FileDescriptor

var file_loans_approveloan_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6c,
	0x6f, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x6f, 0x61, 0x6e, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6c, 0x6f, 0x61, 0x6e, 0x22, 0xde, 0x02, 0x0a,
	0x12, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x4b, 0x0a, 0x0a,
	0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0a, 0x61,
	0x64, 0x64, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x1a, 0x68, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x80, 0x0b,
	0x0a, 0x13, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x46, 0x65, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x69,
	0x6b, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x64, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x65, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69,
	0x6c, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d,
	0x69, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x6d, 0x69, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x65, 0x6d, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x45, 0x6d, 0x69, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x16, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x75,
	0x70, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x69, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x62,
	0x69, 0x6c, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x42, 0x69, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x6c, 0x75,
	0x73, 0x5f, 0x67, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x67, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x46, 0x65, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x65, 0x65, 0x41, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x66, 0x65, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x69, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x69, 0x12, 0x30, 0x0a, 0x14,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c,
	0x5f, 0x72, 0x6f, 0x69, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x52, 0x6f, 0x69, 0x12, 0x30,
	0x0a, 0x14, 0x65, 0x6d, 0x69, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6d,
	0x69, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x32, 0x0a, 0x15, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x70, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x65, 0x65,
	0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x65, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x46, 0x65, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x74,
	0x78, 0x6e, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x67, 0x73, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x78, 0x6e, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x73,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_loans_approveloan_proto_rawDescOnce sync.Once
	file_loans_approveloan_proto_rawDescData = file_loans_approveloan_proto_rawDesc
)

func file_loans_approveloan_proto_rawDescGZIP() []byte {
	file_loans_approveloan_proto_rawDescOnce.Do(func() {
		file_loans_approveloan_proto_rawDescData = protoimpl.X.CompressGZIP(file_loans_approveloan_proto_rawDescData)
	})
	return file_loans_approveloan_proto_rawDescData
}

var file_loans_approveloan_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_loans_approveloan_proto_goTypes = []interface{}{
	(*ApproveLoanRequest)(nil),       // 0: loans.approveloan.approveLoanRequest
	(*ApproveLoanResponse)(nil),      // 1: loans.approveloan.approveLoanResponse
	(*ApproveLoanRequest_Field)(nil), // 2: loans.approveloan.approveLoanRequest.Field
}
var file_loans_approveloan_proto_depIdxs = []int32{
	2, // 0: loans.approveloan.approveLoanRequest.addonsData:type_name -> loans.approveloan.approveLoanRequest.Field
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_loans_approveloan_proto_init() }
func file_loans_approveloan_proto_init() {
	if File_loans_approveloan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_loans_approveloan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loans_approveloan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveLoanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loans_approveloan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveLoanRequest_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_loans_approveloan_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loans_approveloan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_loans_approveloan_proto_goTypes,
		DependencyIndexes: file_loans_approveloan_proto_depIdxs,
		MessageInfos:      file_loans_approveloan_proto_msgTypes,
	}.Build()
	File_loans_approveloan_proto = out.File
	file_loans_approveloan_proto_rawDesc = nil
	file_loans_approveloan_proto_goTypes = nil
	file_loans_approveloan_proto_depIdxs = nil
}
