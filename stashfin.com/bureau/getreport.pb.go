// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.6
// source: bureau/getreport.proto

package bureau

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BureauRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId int64  `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Range      int32  `protobuf:"varint,2,opt,name=range,proto3" json:"range,omitempty"`
	BureauType int32  `protobuf:"varint,3,opt,name=bureau_type,json=bureauType,proto3" json:"bureau_type,omitempty"`
	Source     string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	PullType   int32  `protobuf:"varint,5,opt,name=pull_type,json=pullType,proto3" json:"pull_type,omitempty"`
}

func (x *BureauRequest) Reset() {
	*x = BureauRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BureauRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BureauRequest) ProtoMessage() {}

func (x *BureauRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BureauRequest.ProtoReflect.Descriptor instead.
func (*BureauRequest) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{0}
}

func (x *BureauRequest) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *BureauRequest) GetRange() int32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *BureauRequest) GetBureauType() int32 {
	if x != nil {
		return x.BureauType
	}
	return 0
}

func (x *BureauRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *BureauRequest) GetPullType() int32 {
	if x != nil {
		return x.PullType
	}
	return 0
}

type BureauResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *ReportData `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *BureauResponse) Reset() {
	*x = BureauResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BureauResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BureauResponse) ProtoMessage() {}

func (x *BureauResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BureauResponse.ProtoReflect.Descriptor instead.
func (*BureauResponse) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{1}
}

func (x *BureauResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BureauResponse) GetData() *ReportData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId      int32            `protobuf:"varint,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Score         int32            `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Type          string           `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Tradelines    []*TradeLine     `protobuf:"bytes,4,rep,name=tradelines,proto3" json:"tradelines,omitempty"`
	Dpd           *DPD             `protobuf:"bytes,5,opt,name=dpd,proto3,oneof" json:"dpd,omitempty"`
	Enquiries     *Enquiries       `protobuf:"bytes,6,opt,name=enquiries,proto3,oneof" json:"enquiries,omitempty"`
	DpdChar       *DpdChar         `protobuf:"bytes,7,opt,name=dpd_char,json=dpdChar,proto3,oneof" json:"dpd_char,omitempty"`
	ReportPath    *string          `protobuf:"bytes,8,opt,name=report_path,json=reportPath,proto3,oneof" json:"report_path,omitempty"`
	DpdCounts     *DPDCounts       `protobuf:"bytes,9,opt,name=dpd_counts,json=dpdCounts,proto3,oneof" json:"dpd_counts,omitempty"`
	EnquiriesData []*EnquiriesData `protobuf:"bytes,10,rep,name=enquiries_data,json=enquiriesData,proto3" json:"enquiries_data,omitempty"`
}

func (x *ReportData) Reset() {
	*x = ReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportData) ProtoMessage() {}

func (x *ReportData) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportData.ProtoReflect.Descriptor instead.
func (*ReportData) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{2}
}

func (x *ReportData) GetReportId() int32 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

func (x *ReportData) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ReportData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReportData) GetTradelines() []*TradeLine {
	if x != nil {
		return x.Tradelines
	}
	return nil
}

func (x *ReportData) GetDpd() *DPD {
	if x != nil {
		return x.Dpd
	}
	return nil
}

func (x *ReportData) GetEnquiries() *Enquiries {
	if x != nil {
		return x.Enquiries
	}
	return nil
}

func (x *ReportData) GetDpdChar() *DpdChar {
	if x != nil {
		return x.DpdChar
	}
	return nil
}

func (x *ReportData) GetReportPath() string {
	if x != nil && x.ReportPath != nil {
		return *x.ReportPath
	}
	return ""
}

func (x *ReportData) GetDpdCounts() *DPDCounts {
	if x != nil {
		return x.DpdCounts
	}
	return nil
}

func (x *ReportData) GetEnquiriesData() []*EnquiriesData {
	if x != nil {
		return x.EnquiriesData
	}
	return nil
}

type TradeLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountType        string  `protobuf:"bytes,2,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	CurrentBalance     int32   `protobuf:"varint,3,opt,name=current_balance,json=currentBalance,proto3" json:"current_balance,omitempty"`
	DateClosed         *string `protobuf:"bytes,4,opt,name=date_closed,json=dateClosed,proto3,oneof" json:"date_closed,omitempty"`
	LastPaymentDate    *string `protobuf:"bytes,5,opt,name=last_payment_date,json=lastPaymentDate,proto3,oneof" json:"last_payment_date,omitempty"`
	DisbursedDate      *string `protobuf:"bytes,6,opt,name=disbursed_date,json=disbursedDate,proto3,oneof" json:"disbursed_date,omitempty"`
	DateReported       *string `protobuf:"bytes,7,opt,name=date_reported,json=dateReported,proto3,oneof" json:"date_reported,omitempty"`
	SanctionedAmount   *int64  `protobuf:"varint,8,opt,name=sanctioned_amount,json=sanctionedAmount,proto3,oneof" json:"sanctioned_amount,omitempty"`
	OwnershipIndicator *string `protobuf:"bytes,9,opt,name=ownership_indicator,json=ownershipIndicator,proto3,oneof" json:"ownership_indicator,omitempty"`
	SuitFiled          string  `protobuf:"bytes,10,opt,name=suit_filed,json=suitFiled,proto3" json:"suit_filed,omitempty"`
	OverdueAmount      *int32  `protobuf:"varint,11,opt,name=overdue_amount,json=overdueAmount,proto3,oneof" json:"overdue_amount,omitempty"`
	SettledStatus      string  `protobuf:"bytes,12,opt,name=settled_status,json=settledStatus,proto3" json:"settled_status,omitempty"`
	AccountStatus      *string `protobuf:"bytes,13,opt,name=account_status,json=accountStatus,proto3,oneof" json:"account_status,omitempty"`
	EmiAmount          *int64  `protobuf:"varint,14,opt,name=emi_amount,json=emiAmount,proto3,oneof" json:"emi_amount,omitempty"`
	CreditLimit        *int64  `protobuf:"varint,15,opt,name=credit_limit,json=creditLimit,proto3,oneof" json:"credit_limit,omitempty"`
	LoanType           *string `protobuf:"bytes,16,opt,name=loan_type,json=loanType,proto3,oneof" json:"loan_type,omitempty"`
	WrittenOffAmount   *int64  `protobuf:"varint,17,opt,name=written_off_amount,json=writtenOffAmount,proto3,oneof" json:"written_off_amount,omitempty"`
	SettlementAmount   *int64  `protobuf:"varint,18,opt,name=settlement_amount,json=settlementAmount,proto3,oneof" json:"settlement_amount,omitempty"`
}

func (x *TradeLine) Reset() {
	*x = TradeLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeLine) ProtoMessage() {}

func (x *TradeLine) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeLine.ProtoReflect.Descriptor instead.
func (*TradeLine) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{3}
}

func (x *TradeLine) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeLine) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *TradeLine) GetCurrentBalance() int32 {
	if x != nil {
		return x.CurrentBalance
	}
	return 0
}

func (x *TradeLine) GetDateClosed() string {
	if x != nil && x.DateClosed != nil {
		return *x.DateClosed
	}
	return ""
}

func (x *TradeLine) GetLastPaymentDate() string {
	if x != nil && x.LastPaymentDate != nil {
		return *x.LastPaymentDate
	}
	return ""
}

func (x *TradeLine) GetDisbursedDate() string {
	if x != nil && x.DisbursedDate != nil {
		return *x.DisbursedDate
	}
	return ""
}

func (x *TradeLine) GetDateReported() string {
	if x != nil && x.DateReported != nil {
		return *x.DateReported
	}
	return ""
}

func (x *TradeLine) GetSanctionedAmount() int64 {
	if x != nil && x.SanctionedAmount != nil {
		return *x.SanctionedAmount
	}
	return 0
}

func (x *TradeLine) GetOwnershipIndicator() string {
	if x != nil && x.OwnershipIndicator != nil {
		return *x.OwnershipIndicator
	}
	return ""
}

func (x *TradeLine) GetSuitFiled() string {
	if x != nil {
		return x.SuitFiled
	}
	return ""
}

func (x *TradeLine) GetOverdueAmount() int32 {
	if x != nil && x.OverdueAmount != nil {
		return *x.OverdueAmount
	}
	return 0
}

func (x *TradeLine) GetSettledStatus() string {
	if x != nil {
		return x.SettledStatus
	}
	return ""
}

func (x *TradeLine) GetAccountStatus() string {
	if x != nil && x.AccountStatus != nil {
		return *x.AccountStatus
	}
	return ""
}

func (x *TradeLine) GetEmiAmount() int64 {
	if x != nil && x.EmiAmount != nil {
		return *x.EmiAmount
	}
	return 0
}

func (x *TradeLine) GetCreditLimit() int64 {
	if x != nil && x.CreditLimit != nil {
		return *x.CreditLimit
	}
	return 0
}

func (x *TradeLine) GetLoanType() string {
	if x != nil && x.LoanType != nil {
		return *x.LoanType
	}
	return ""
}

func (x *TradeLine) GetWrittenOffAmount() int64 {
	if x != nil && x.WrittenOffAmount != nil {
		return *x.WrittenOffAmount
	}
	return 0
}

func (x *TradeLine) GetSettlementAmount() int64 {
	if x != nil && x.SettlementAmount != nil {
		return *x.SettlementAmount
	}
	return 0
}

type DPD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month1  int32 `protobuf:"varint,1,opt,name=month1,proto3" json:"month1,omitempty"`
	Month2  int32 `protobuf:"varint,2,opt,name=month2,proto3" json:"month2,omitempty"`
	Month3  int32 `protobuf:"varint,3,opt,name=month3,proto3" json:"month3,omitempty"`
	Month4  int32 `protobuf:"varint,4,opt,name=month4,proto3" json:"month4,omitempty"`
	Month5  int32 `protobuf:"varint,5,opt,name=month5,proto3" json:"month5,omitempty"`
	Month6  int32 `protobuf:"varint,6,opt,name=month6,proto3" json:"month6,omitempty"`
	Month7  int32 `protobuf:"varint,7,opt,name=month7,proto3" json:"month7,omitempty"`
	Month8  int32 `protobuf:"varint,8,opt,name=month8,proto3" json:"month8,omitempty"`
	Month9  int32 `protobuf:"varint,9,opt,name=month9,proto3" json:"month9,omitempty"`
	Month10 int32 `protobuf:"varint,10,opt,name=month10,proto3" json:"month10,omitempty"`
	Month11 int32 `protobuf:"varint,11,opt,name=month11,proto3" json:"month11,omitempty"`
	Month12 int32 `protobuf:"varint,12,opt,name=month12,proto3" json:"month12,omitempty"`
	Month13 int32 `protobuf:"varint,13,opt,name=month13,proto3" json:"month13,omitempty"`
	Month14 int32 `protobuf:"varint,14,opt,name=month14,proto3" json:"month14,omitempty"`
	Month15 int32 `protobuf:"varint,15,opt,name=month15,proto3" json:"month15,omitempty"`
	Month16 int32 `protobuf:"varint,16,opt,name=month16,proto3" json:"month16,omitempty"`
	Month17 int32 `protobuf:"varint,17,opt,name=month17,proto3" json:"month17,omitempty"`
	Month18 int32 `protobuf:"varint,18,opt,name=month18,proto3" json:"month18,omitempty"`
	Month19 int32 `protobuf:"varint,19,opt,name=month19,proto3" json:"month19,omitempty"`
	Month20 int32 `protobuf:"varint,20,opt,name=month20,proto3" json:"month20,omitempty"`
	Month21 int32 `protobuf:"varint,21,opt,name=month21,proto3" json:"month21,omitempty"`
	Month22 int32 `protobuf:"varint,22,opt,name=month22,proto3" json:"month22,omitempty"`
	Month23 int32 `protobuf:"varint,23,opt,name=month23,proto3" json:"month23,omitempty"`
	Month24 int32 `protobuf:"varint,24,opt,name=month24,proto3" json:"month24,omitempty"`
}

func (x *DPD) Reset() {
	*x = DPD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DPD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DPD) ProtoMessage() {}

func (x *DPD) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DPD.ProtoReflect.Descriptor instead.
func (*DPD) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{4}
}

func (x *DPD) GetMonth1() int32 {
	if x != nil {
		return x.Month1
	}
	return 0
}

func (x *DPD) GetMonth2() int32 {
	if x != nil {
		return x.Month2
	}
	return 0
}

func (x *DPD) GetMonth3() int32 {
	if x != nil {
		return x.Month3
	}
	return 0
}

func (x *DPD) GetMonth4() int32 {
	if x != nil {
		return x.Month4
	}
	return 0
}

func (x *DPD) GetMonth5() int32 {
	if x != nil {
		return x.Month5
	}
	return 0
}

func (x *DPD) GetMonth6() int32 {
	if x != nil {
		return x.Month6
	}
	return 0
}

func (x *DPD) GetMonth7() int32 {
	if x != nil {
		return x.Month7
	}
	return 0
}

func (x *DPD) GetMonth8() int32 {
	if x != nil {
		return x.Month8
	}
	return 0
}

func (x *DPD) GetMonth9() int32 {
	if x != nil {
		return x.Month9
	}
	return 0
}

func (x *DPD) GetMonth10() int32 {
	if x != nil {
		return x.Month10
	}
	return 0
}

func (x *DPD) GetMonth11() int32 {
	if x != nil {
		return x.Month11
	}
	return 0
}

func (x *DPD) GetMonth12() int32 {
	if x != nil {
		return x.Month12
	}
	return 0
}

func (x *DPD) GetMonth13() int32 {
	if x != nil {
		return x.Month13
	}
	return 0
}

func (x *DPD) GetMonth14() int32 {
	if x != nil {
		return x.Month14
	}
	return 0
}

func (x *DPD) GetMonth15() int32 {
	if x != nil {
		return x.Month15
	}
	return 0
}

func (x *DPD) GetMonth16() int32 {
	if x != nil {
		return x.Month16
	}
	return 0
}

func (x *DPD) GetMonth17() int32 {
	if x != nil {
		return x.Month17
	}
	return 0
}

func (x *DPD) GetMonth18() int32 {
	if x != nil {
		return x.Month18
	}
	return 0
}

func (x *DPD) GetMonth19() int32 {
	if x != nil {
		return x.Month19
	}
	return 0
}

func (x *DPD) GetMonth20() int32 {
	if x != nil {
		return x.Month20
	}
	return 0
}

func (x *DPD) GetMonth21() int32 {
	if x != nil {
		return x.Month21
	}
	return 0
}

func (x *DPD) GetMonth22() int32 {
	if x != nil {
		return x.Month22
	}
	return 0
}

func (x *DPD) GetMonth23() int32 {
	if x != nil {
		return x.Month23
	}
	return 0
}

func (x *DPD) GetMonth24() int32 {
	if x != nil {
		return x.Month24
	}
	return 0
}

type Enquiries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month1  int32 `protobuf:"varint,1,opt,name=month1,proto3" json:"month1,omitempty"`
	Month3  int32 `protobuf:"varint,2,opt,name=month3,proto3" json:"month3,omitempty"`
	Month6  int32 `protobuf:"varint,3,opt,name=month6,proto3" json:"month6,omitempty"`
	Month9  int32 `protobuf:"varint,4,opt,name=month9,proto3" json:"month9,omitempty"`
	Month12 int32 `protobuf:"varint,5,opt,name=month12,proto3" json:"month12,omitempty"`
	Month15 int32 `protobuf:"varint,6,opt,name=month15,proto3" json:"month15,omitempty"`
	Month18 int32 `protobuf:"varint,7,opt,name=month18,proto3" json:"month18,omitempty"`
	Month21 int32 `protobuf:"varint,8,opt,name=month21,proto3" json:"month21,omitempty"`
	Month24 int32 `protobuf:"varint,9,opt,name=month24,proto3" json:"month24,omitempty"`
}

func (x *Enquiries) Reset() {
	*x = Enquiries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enquiries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enquiries) ProtoMessage() {}

func (x *Enquiries) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enquiries.ProtoReflect.Descriptor instead.
func (*Enquiries) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{5}
}

func (x *Enquiries) GetMonth1() int32 {
	if x != nil {
		return x.Month1
	}
	return 0
}

func (x *Enquiries) GetMonth3() int32 {
	if x != nil {
		return x.Month3
	}
	return 0
}

func (x *Enquiries) GetMonth6() int32 {
	if x != nil {
		return x.Month6
	}
	return 0
}

func (x *Enquiries) GetMonth9() int32 {
	if x != nil {
		return x.Month9
	}
	return 0
}

func (x *Enquiries) GetMonth12() int32 {
	if x != nil {
		return x.Month12
	}
	return 0
}

func (x *Enquiries) GetMonth15() int32 {
	if x != nil {
		return x.Month15
	}
	return 0
}

func (x *Enquiries) GetMonth18() int32 {
	if x != nil {
		return x.Month18
	}
	return 0
}

func (x *Enquiries) GetMonth21() int32 {
	if x != nil {
		return x.Month21
	}
	return 0
}

func (x *Enquiries) GetMonth24() int32 {
	if x != nil {
		return x.Month24
	}
	return 0
}

type DpdChar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month1  bool `protobuf:"varint,1,opt,name=month1,proto3" json:"month1,omitempty"`
	Month3  bool `protobuf:"varint,2,opt,name=month3,proto3" json:"month3,omitempty"`
	Month6  bool `protobuf:"varint,3,opt,name=month6,proto3" json:"month6,omitempty"`
	Month9  bool `protobuf:"varint,4,opt,name=month9,proto3" json:"month9,omitempty"`
	Month12 bool `protobuf:"varint,5,opt,name=month12,proto3" json:"month12,omitempty"`
	Month15 bool `protobuf:"varint,6,opt,name=month15,proto3" json:"month15,omitempty"`
	Month18 bool `protobuf:"varint,7,opt,name=month18,proto3" json:"month18,omitempty"`
	Month21 bool `protobuf:"varint,8,opt,name=month21,proto3" json:"month21,omitempty"`
	Month24 bool `protobuf:"varint,9,opt,name=month24,proto3" json:"month24,omitempty"`
}

func (x *DpdChar) Reset() {
	*x = DpdChar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpdChar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpdChar) ProtoMessage() {}

func (x *DpdChar) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpdChar.ProtoReflect.Descriptor instead.
func (*DpdChar) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{6}
}

func (x *DpdChar) GetMonth1() bool {
	if x != nil {
		return x.Month1
	}
	return false
}

func (x *DpdChar) GetMonth3() bool {
	if x != nil {
		return x.Month3
	}
	return false
}

func (x *DpdChar) GetMonth6() bool {
	if x != nil {
		return x.Month6
	}
	return false
}

func (x *DpdChar) GetMonth9() bool {
	if x != nil {
		return x.Month9
	}
	return false
}

func (x *DpdChar) GetMonth12() bool {
	if x != nil {
		return x.Month12
	}
	return false
}

func (x *DpdChar) GetMonth15() bool {
	if x != nil {
		return x.Month15
	}
	return false
}

func (x *DpdChar) GetMonth18() bool {
	if x != nil {
		return x.Month18
	}
	return false
}

func (x *DpdChar) GetMonth21() bool {
	if x != nil {
		return x.Month21
	}
	return false
}

func (x *DpdChar) GetMonth24() bool {
	if x != nil {
		return x.Month24
	}
	return false
}

type DPDCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dpd1To30   int32 `protobuf:"varint,1,opt,name=dpd1to30,proto3" json:"dpd1to30,omitempty"`
	Dpd36Month int32 `protobuf:"varint,2,opt,name=dpd36month,proto3" json:"dpd36month,omitempty"`
	Dpd90Plus  int32 `protobuf:"varint,3,opt,name=dpd90_plus,json=dpd90Plus,proto3" json:"dpd90_plus,omitempty"`
	Dpd31To90  int32 `protobuf:"varint,4,opt,name=dpd31to90,proto3" json:"dpd31to90,omitempty"`
}

func (x *DPDCounts) Reset() {
	*x = DPDCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DPDCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DPDCounts) ProtoMessage() {}

func (x *DPDCounts) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DPDCounts.ProtoReflect.Descriptor instead.
func (*DPDCounts) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{7}
}

func (x *DPDCounts) GetDpd1To30() int32 {
	if x != nil {
		return x.Dpd1To30
	}
	return 0
}

func (x *DPDCounts) GetDpd36Month() int32 {
	if x != nil {
		return x.Dpd36Month
	}
	return 0
}

func (x *DPDCounts) GetDpd90Plus() int32 {
	if x != nil {
		return x.Dpd90Plus
	}
	return 0
}

func (x *DPDCounts) GetDpd31To90() int32 {
	if x != nil {
		return x.Dpd31To90
	}
	return 0
}

type EnquiriesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateReported    string  `protobuf:"bytes,1,opt,name=date_reported,json=dateReported,proto3" json:"date_reported,omitempty"`
	EnquiryPurpose  int32   `protobuf:"varint,2,opt,name=enquiry_purpose,json=enquiryPurpose,proto3" json:"enquiry_purpose,omitempty"`
	ReportingMember string  `protobuf:"bytes,3,opt,name=reporting_member,json=reportingMember,proto3" json:"reporting_member,omitempty"`
	LoanType        *string `protobuf:"bytes,4,opt,name=loan_type,json=loanType,proto3,oneof" json:"loan_type,omitempty"`
}

func (x *EnquiriesData) Reset() {
	*x = EnquiriesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bureau_getreport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnquiriesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnquiriesData) ProtoMessage() {}

func (x *EnquiriesData) ProtoReflect() protoreflect.Message {
	mi := &file_bureau_getreport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnquiriesData.ProtoReflect.Descriptor instead.
func (*EnquiriesData) Descriptor() ([]byte, []int) {
	return file_bureau_getreport_proto_rawDescGZIP(), []int{8}
}

func (x *EnquiriesData) GetDateReported() string {
	if x != nil {
		return x.DateReported
	}
	return ""
}

func (x *EnquiriesData) GetEnquiryPurpose() int32 {
	if x != nil {
		return x.EnquiryPurpose
	}
	return 0
}

func (x *EnquiriesData) GetReportingMember() string {
	if x != nil {
		return x.ReportingMember
	}
	return ""
}

func (x *EnquiriesData) GetLoanType() string {
	if x != nil && x.LoanType != nil {
		return *x.LoanType
	}
	return ""
}

var File_bureau_getreport_proto protoreflect.FileDescriptor

var file_bureau_getreport_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x2f, 0x67, 0x65, 0x74, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75,
	0x2e, 0x67, 0x65, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x62,
	0x75, 0x72, 0x65, 0x61, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x75, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x62, 0x75, 0x72,
	0x65, 0x61, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x2e, 0x67, 0x65, 0x74, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xaa, 0x04, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x2e, 0x67, 0x65, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x64, 0x70, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x2e, 0x67, 0x65, 0x74,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x50, 0x44, 0x48, 0x00, 0x52, 0x03, 0x64, 0x70,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x09, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75,
	0x2e, 0x67, 0x65, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x69, 0x65, 0x73, 0x48, 0x01, 0x52, 0x09, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x08, 0x64, 0x70, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x2e,
	0x67, 0x65, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x64, 0x70, 0x64, 0x43, 0x68, 0x61,
	0x72, 0x48, 0x02, 0x52, 0x07, 0x64, 0x70, 0x64, 0x43, 0x68, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x70, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x72, 0x65,
	0x61, 0x75, 0x2e, 0x67, 0x65, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x50, 0x44,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x48, 0x04, 0x52, 0x09, 0x64, 0x70, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x69, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x2e, 0x67, 0x65, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0d, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x64, 0x70, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x69, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x70, 0x64, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x70, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x22, 0xe7, 0x07, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x62, 0x75, 0x72, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x73, 0x61, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x04, 0x52, 0x10, 0x73, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x13, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x12, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x69, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x65, 0x6d, 0x69, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x08, 0x52, 0x09, 0x65, 0x6d, 0x69, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x6f, 0x61,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x08,
	0x6c, 0x6f, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x77,
	0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x10, 0x77, 0x72, 0x69, 0x74, 0x74,
	0x65, 0x6e, 0x4f, 0x66, 0x66, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x69, 0x73, 0x62, 0x75,
	0x72, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x73, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x6d, 0x69, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe3, 0x04, 0x0a, 0x03, 0x44,
	0x50, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x33, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x35, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x37, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x39, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x39, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x31, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x31, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x31, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x31, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x34, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x34, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x35, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x31, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31,
	0x36, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x36,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x37, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x37, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x31, 0x38, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x31, 0x38, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x39, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x39, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x30, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x32, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x32, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x32, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x32, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x33, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x32, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32,
	0x34, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x34,
	0x22, 0xed, 0x01, 0x0a, 0x09, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x33,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x33, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x39,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x39, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x31, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x31, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x38, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x38, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x32, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32,
	0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x34,
	0x22, 0xeb, 0x01, 0x0a, 0x07, 0x64, 0x70, 0x64, 0x43, 0x68, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x33, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x33, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x39, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x39, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x31, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31,
	0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x35,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x38, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x31, 0x38, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x32, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x32, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x34, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x34, 0x22, 0x84,
	0x01, 0x0a, 0x09, 0x44, 0x50, 0x44, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x70, 0x64, 0x31, 0x74, 0x6f, 0x33, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x70, 0x64, 0x31, 0x74, 0x6f, 0x33, 0x30, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x70, 0x64, 0x33,
	0x36, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x70,
	0x64, 0x33, 0x36, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x70, 0x64, 0x39,
	0x30, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x70,
	0x64, 0x39, 0x30, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x70, 0x64, 0x33, 0x31,
	0x74, 0x6f, 0x39, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x70, 0x64, 0x33,
	0x31, 0x74, 0x6f, 0x39, 0x30, 0x22, 0xb8, 0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x50, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bureau_getreport_proto_rawDescOnce sync.Once
	file_bureau_getreport_proto_rawDescData = file_bureau_getreport_proto_rawDesc
)

func file_bureau_getreport_proto_rawDescGZIP() []byte {
	file_bureau_getreport_proto_rawDescOnce.Do(func() {
		file_bureau_getreport_proto_rawDescData = protoimpl.X.CompressGZIP(file_bureau_getreport_proto_rawDescData)
	})
	return file_bureau_getreport_proto_rawDescData
}

var file_bureau_getreport_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bureau_getreport_proto_goTypes = []interface{}{
	(*BureauRequest)(nil),  // 0: bureau.getreport.bureauRequest
	(*BureauResponse)(nil), // 1: bureau.getreport.bureauResponse
	(*ReportData)(nil),     // 2: bureau.getreport.reportData
	(*TradeLine)(nil),      // 3: bureau.getreport.TradeLine
	(*DPD)(nil),            // 4: bureau.getreport.DPD
	(*Enquiries)(nil),      // 5: bureau.getreport.Enquiries
	(*DpdChar)(nil),        // 6: bureau.getreport.dpdChar
	(*DPDCounts)(nil),      // 7: bureau.getreport.DPDCounts
	(*EnquiriesData)(nil),  // 8: bureau.getreport.EnquiriesData
}
var file_bureau_getreport_proto_depIdxs = []int32{
	2, // 0: bureau.getreport.bureauResponse.data:type_name -> bureau.getreport.reportData
	3, // 1: bureau.getreport.reportData.tradelines:type_name -> bureau.getreport.TradeLine
	4, // 2: bureau.getreport.reportData.dpd:type_name -> bureau.getreport.DPD
	5, // 3: bureau.getreport.reportData.enquiries:type_name -> bureau.getreport.Enquiries
	6, // 4: bureau.getreport.reportData.dpd_char:type_name -> bureau.getreport.dpdChar
	7, // 5: bureau.getreport.reportData.dpd_counts:type_name -> bureau.getreport.DPDCounts
	8, // 6: bureau.getreport.reportData.enquiries_data:type_name -> bureau.getreport.EnquiriesData
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_bureau_getreport_proto_init() }
func file_bureau_getreport_proto_init() {
	if File_bureau_getreport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bureau_getreport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BureauRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BureauResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DPD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enquiries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpdChar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DPDCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bureau_getreport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnquiriesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bureau_getreport_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_bureau_getreport_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_bureau_getreport_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_bureau_getreport_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bureau_getreport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bureau_getreport_proto_goTypes,
		DependencyIndexes: file_bureau_getreport_proto_depIdxs,
		MessageInfos:      file_bureau_getreport_proto_msgTypes,
	}.Build()
	File_bureau_getreport_proto = out.File
	file_bureau_getreport_proto_rawDesc = nil
	file_bureau_getreport_proto_goTypes = nil
	file_bureau_getreport_proto_depIdxs = nil
}
