// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.6
// source: growth/getchrplans.proto

package growth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chrplansrequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Chrplansrequest) Reset() {
	*x = Chrplansrequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_getchrplans_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chrplansrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chrplansrequest) ProtoMessage() {}

func (x *Chrplansrequest) ProtoReflect() protoreflect.Message {
	mi := &file_growth_getchrplans_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chrplansrequest.ProtoReflect.Descriptor instead.
func (*Chrplansrequest) Descriptor() ([]byte, []int) {
	return file_growth_getchrplans_proto_rawDescGZIP(), []int{0}
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductType     string `protobuf:"bytes,2,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	DurationText    string `protobuf:"bytes,3,opt,name=duration_text,json=durationText,proto3" json:"duration_text,omitempty"`
	Price           string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	DiscountedPrice string `protobuf:"bytes,5,opt,name=discounted_price,json=discountedPrice,proto3" json:"discounted_price,omitempty"`
	Recommended     int32  `protobuf:"varint,6,opt,name=recommended,proto3" json:"recommended,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_getchrplans_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_growth_getchrplans_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_growth_getchrplans_proto_rawDescGZIP(), []int{1}
}

func (x *Plan) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Plan) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *Plan) GetDurationText() string {
	if x != nil {
		return x.DurationText
	}
	return ""
}

func (x *Plan) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Plan) GetDiscountedPrice() string {
	if x != nil {
		return x.DiscountedPrice
	}
	return ""
}

func (x *Plan) GetRecommended() int32 {
	if x != nil {
		return x.Recommended
	}
	return 0
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Title      string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	FeatureIds []int32 `protobuf:"varint,4,rep,packed,name=feature_ids,json=featureIds,proto3" json:"feature_ids,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_getchrplans_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_growth_getchrplans_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_growth_getchrplans_proto_rawDescGZIP(), []int{2}
}

func (x *Product) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Product) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Product) GetFeatureIds() []int32 {
	if x != nil {
		return x.FeatureIds
	}
	return nil
}

type Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Feature) Reset() {
	*x = Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_getchrplans_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_growth_getchrplans_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_growth_getchrplans_proto_rawDescGZIP(), []int{3}
}

func (x *Feature) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Feature) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Plandetailsdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header                string                          `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Message               string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RecommendedPlanStatus bool                            `protobuf:"varint,3,opt,name=recommended_plan_status,json=recommendedPlanStatus,proto3" json:"recommended_plan_status,omitempty"`
	RecommendedPlanData   *PlandetailsdataRecommendedplan `protobuf:"bytes,4,opt,name=recommended_plan_data,json=recommendedPlanData,proto3" json:"recommended_plan_data,omitempty"`
	BureauLogo            string                          `protobuf:"bytes,5,opt,name=bureau_logo,json=bureauLogo,proto3" json:"bureau_logo,omitempty"`
	Plans                 []*Plan                         `protobuf:"bytes,6,rep,name=plans,proto3" json:"plans,omitempty"`
	Products              []*Product                      `protobuf:"bytes,7,rep,name=products,proto3" json:"products,omitempty"`
	Features              []*Feature                      `protobuf:"bytes,8,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *Plandetailsdata) Reset() {
	*x = Plandetailsdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_getchrplans_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plandetailsdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plandetailsdata) ProtoMessage() {}

func (x *Plandetailsdata) ProtoReflect() protoreflect.Message {
	mi := &file_growth_getchrplans_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plandetailsdata.ProtoReflect.Descriptor instead.
func (*Plandetailsdata) Descriptor() ([]byte, []int) {
	return file_growth_getchrplans_proto_rawDescGZIP(), []int{4}
}

func (x *Plandetailsdata) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *Plandetailsdata) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Plandetailsdata) GetRecommendedPlanStatus() bool {
	if x != nil {
		return x.RecommendedPlanStatus
	}
	return false
}

func (x *Plandetailsdata) GetRecommendedPlanData() *PlandetailsdataRecommendedplan {
	if x != nil {
		return x.RecommendedPlanData
	}
	return nil
}

func (x *Plandetailsdata) GetBureauLogo() string {
	if x != nil {
		return x.BureauLogo
	}
	return ""
}

func (x *Plandetailsdata) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *Plandetailsdata) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Plandetailsdata) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

type Chrplansresponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	StatusCode int32            `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Data       *Plandetailsdata `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Message    string           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Chrplansresponse) Reset() {
	*x = Chrplansresponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_getchrplans_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chrplansresponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chrplansresponse) ProtoMessage() {}

func (x *Chrplansresponse) ProtoReflect() protoreflect.Message {
	mi := &file_growth_getchrplans_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chrplansresponse.ProtoReflect.Descriptor instead.
func (*Chrplansresponse) Descriptor() ([]byte, []int) {
	return file_growth_getchrplans_proto_rawDescGZIP(), []int{5}
}

func (x *Chrplansresponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Chrplansresponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Chrplansresponse) GetData() *Plandetailsdata {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Chrplansresponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PlandetailsdataRecommendedplan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Benefits []string `protobuf:"bytes,2,rep,name=benefits,proto3" json:"benefits,omitempty"`
	CtaText  string   `protobuf:"bytes,3,opt,name=cta_text,json=ctaText,proto3" json:"cta_text,omitempty"`
	Amount   float64  `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	PlanId   int32    `protobuf:"varint,5,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *PlandetailsdataRecommendedplan) Reset() {
	*x = PlandetailsdataRecommendedplan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_growth_getchrplans_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlandetailsdataRecommendedplan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlandetailsdataRecommendedplan) ProtoMessage() {}

func (x *PlandetailsdataRecommendedplan) ProtoReflect() protoreflect.Message {
	mi := &file_growth_getchrplans_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlandetailsdataRecommendedplan.ProtoReflect.Descriptor instead.
func (*PlandetailsdataRecommendedplan) Descriptor() ([]byte, []int) {
	return file_growth_getchrplans_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PlandetailsdataRecommendedplan) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PlandetailsdataRecommendedplan) GetBenefits() []string {
	if x != nil {
		return x.Benefits
	}
	return nil
}

func (x *PlandetailsdataRecommendedplan) GetCtaText() string {
	if x != nil {
		return x.CtaText
	}
	return ""
}

func (x *PlandetailsdataRecommendedplan) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PlandetailsdataRecommendedplan) GetPlanId() int32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

var File_growth_getchrplans_proto protoreflect.FileDescriptor

var file_growth_getchrplans_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x2f, 0x67, 0x65, 0x74, 0x63, 0x68, 0x72, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x67, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x2e, 0x67, 0x65, 0x74, 0x63, 0x68, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x11,
	0x0a, 0x0f, 0x63, 0x68, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xc1, 0x01, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0x64, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x07, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xb9, 0x04, 0x0a, 0x0f, 0x70,
	0x6c, 0x61, 0x6e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x6c,
	0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x67, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x2e, 0x67, 0x65, 0x74, 0x63, 0x68, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x70, 0x6c, 0x61, 0x6e, 0x52, 0x13, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x5f, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x4c, 0x6f,
	0x67, 0x6f, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x2e, 0x67, 0x65, 0x74, 0x63, 0x68,
	0x72, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61,
	0x6e, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x2e, 0x67, 0x65,
	0x74, 0x63, 0x68, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x2e, 0x67, 0x65, 0x74, 0x63, 0x68, 0x72, 0x70, 0x6c, 0x61,
	0x6e, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x74,
	0x61, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x74,
	0x61, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x10, 0x63, 0x68, 0x72, 0x70, 0x6c,
	0x61, 0x6e, 0x73, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x2e, 0x67, 0x65, 0x74, 0x63, 0x68,
	0x72, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_growth_getchrplans_proto_rawDescOnce sync.Once
	file_growth_getchrplans_proto_rawDescData = file_growth_getchrplans_proto_rawDesc
)

func file_growth_getchrplans_proto_rawDescGZIP() []byte {
	file_growth_getchrplans_proto_rawDescOnce.Do(func() {
		file_growth_getchrplans_proto_rawDescData = protoimpl.X.CompressGZIP(file_growth_getchrplans_proto_rawDescData)
	})
	return file_growth_getchrplans_proto_rawDescData
}

var file_growth_getchrplans_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_growth_getchrplans_proto_goTypes = []interface{}{
	(*Chrplansrequest)(nil),                // 0: growth.getchrplans.chrplansrequest
	(*Plan)(nil),                           // 1: growth.getchrplans.plan
	(*Product)(nil),                        // 2: growth.getchrplans.product
	(*Feature)(nil),                        // 3: growth.getchrplans.feature
	(*Plandetailsdata)(nil),                // 4: growth.getchrplans.plandetailsdata
	(*Chrplansresponse)(nil),               // 5: growth.getchrplans.chrplansresponse
	(*PlandetailsdataRecommendedplan)(nil), // 6: growth.getchrplans.plandetailsdata.recommendedplan
}
var file_growth_getchrplans_proto_depIdxs = []int32{
	6, // 0: growth.getchrplans.plandetailsdata.recommended_plan_data:type_name -> growth.getchrplans.plandetailsdata.recommendedplan
	1, // 1: growth.getchrplans.plandetailsdata.plans:type_name -> growth.getchrplans.plan
	2, // 2: growth.getchrplans.plandetailsdata.products:type_name -> growth.getchrplans.product
	3, // 3: growth.getchrplans.plandetailsdata.features:type_name -> growth.getchrplans.feature
	4, // 4: growth.getchrplans.chrplansresponse.data:type_name -> growth.getchrplans.plandetailsdata
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_growth_getchrplans_proto_init() }
func file_growth_getchrplans_proto_init() {
	if File_growth_getchrplans_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_growth_getchrplans_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chrplansrequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_getchrplans_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_getchrplans_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_getchrplans_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_getchrplans_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plandetailsdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_getchrplans_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chrplansresponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_growth_getchrplans_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlandetailsdataRecommendedplan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_growth_getchrplans_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_growth_getchrplans_proto_goTypes,
		DependencyIndexes: file_growth_getchrplans_proto_depIdxs,
		MessageInfos:      file_growth_getchrplans_proto_msgTypes,
	}.Build()
	File_growth_getchrplans_proto = out.File
	file_growth_getchrplans_proto_rawDesc = nil
	file_growth_getchrplans_proto_goTypes = nil
	file_growth_getchrplans_proto_depIdxs = nil
}
