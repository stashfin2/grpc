// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: stashcash/debitsc.proto

package stashcash

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DebitScRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Flag       int32    `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	CampaignId int64    `protobuf:"varint,3,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Amount     *float32 `protobuf:"fixed32,4,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	ScType     *string  `protobuf:"bytes,5,opt,name=sc_type,json=scType,proto3,oneof" json:"sc_type,omitempty"`
	TxnId      *string  `protobuf:"bytes,6,opt,name=txn_id,json=txnId,proto3,oneof" json:"txn_id,omitempty"`
}

func (x *DebitScRequest) Reset() {
	*x = DebitScRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stashcash_debitsc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebitScRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitScRequest) ProtoMessage() {}

func (x *DebitScRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stashcash_debitsc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitScRequest.ProtoReflect.Descriptor instead.
func (*DebitScRequest) Descriptor() ([]byte, []int) {
	return file_stashcash_debitsc_proto_rawDescGZIP(), []int{0}
}

func (x *DebitScRequest) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *DebitScRequest) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *DebitScRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *DebitScRequest) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *DebitScRequest) GetScType() string {
	if x != nil && x.ScType != nil {
		return *x.ScType
	}
	return ""
}

func (x *DebitScRequest) GetTxnId() string {
	if x != nil && x.TxnId != nil {
		return *x.TxnId
	}
	return ""
}

type DebitScResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *DebitScResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *DebitScResponse) Reset() {
	*x = DebitScResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stashcash_debitsc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebitScResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitScResponse) ProtoMessage() {}

func (x *DebitScResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stashcash_debitsc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitScResponse.ProtoReflect.Descriptor instead.
func (*DebitScResponse) Descriptor() ([]byte, []int) {
	return file_stashcash_debitsc_proto_rawDescGZIP(), []int{1}
}

func (x *DebitScResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DebitScResponse) GetData() *DebitScResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DebitScResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locked           *float32 `protobuf:"fixed32,1,opt,name=locked,proto3,oneof" json:"locked,omitempty"`
	Unlocked         *float32 `protobuf:"fixed32,2,opt,name=unlocked,proto3,oneof" json:"unlocked,omitempty"`
	Balance          *float32 `protobuf:"fixed32,3,opt,name=balance,proto3,oneof" json:"balance,omitempty"`
	RupeeBalance     *float32 `protobuf:"fixed32,4,opt,name=rupee_balance,json=rupeeBalance,proto3,oneof" json:"rupee_balance,omitempty"`
	TxnId            string   `protobuf:"bytes,5,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
	ConversionFactor *int32   `protobuf:"varint,6,opt,name=conversion_factor,json=conversionFactor,proto3,oneof" json:"conversion_factor,omitempty"`
	TxnStatus        string   `protobuf:"bytes,7,opt,name=txn_status,json=txnStatus,proto3" json:"txn_status,omitempty"`
	TxnSc            *float32 `protobuf:"fixed32,8,opt,name=txn_sc,json=txnSc,proto3,oneof" json:"txn_sc,omitempty"`
}

func (x *DebitScResponse_Data) Reset() {
	*x = DebitScResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stashcash_debitsc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebitScResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitScResponse_Data) ProtoMessage() {}

func (x *DebitScResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_stashcash_debitsc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitScResponse_Data.ProtoReflect.Descriptor instead.
func (*DebitScResponse_Data) Descriptor() ([]byte, []int) {
	return file_stashcash_debitsc_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DebitScResponse_Data) GetLocked() float32 {
	if x != nil && x.Locked != nil {
		return *x.Locked
	}
	return 0
}

func (x *DebitScResponse_Data) GetUnlocked() float32 {
	if x != nil && x.Unlocked != nil {
		return *x.Unlocked
	}
	return 0
}

func (x *DebitScResponse_Data) GetBalance() float32 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

func (x *DebitScResponse_Data) GetRupeeBalance() float32 {
	if x != nil && x.RupeeBalance != nil {
		return *x.RupeeBalance
	}
	return 0
}

func (x *DebitScResponse_Data) GetTxnId() string {
	if x != nil {
		return x.TxnId
	}
	return ""
}

func (x *DebitScResponse_Data) GetConversionFactor() int32 {
	if x != nil && x.ConversionFactor != nil {
		return *x.ConversionFactor
	}
	return 0
}

func (x *DebitScResponse_Data) GetTxnStatus() string {
	if x != nil {
		return x.TxnStatus
	}
	return ""
}

func (x *DebitScResponse_Data) GetTxnSc() float32 {
	if x != nil && x.TxnSc != nil {
		return *x.TxnSc
	}
	return 0
}

var File_stashcash_debitsc_proto protoreflect.FileDescriptor

var file_stashcash_debitsc_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x74, 0x61, 0x73, 0x68, 0x63, 0x61, 0x73, 0x68, 0x2f, 0x64, 0x65, 0x62, 0x69,
	0x74, 0x73, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x74, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x73, 0x68, 0x2e, 0x64, 0x65, 0x62, 0x69, 0x74, 0x73, 0x63, 0x22, 0xdf, 0x01, 0x0a,
	0x0e, 0x64, 0x65, 0x62, 0x69, 0x74, 0x53, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x63, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0xdf,
	0x03, 0x0a, 0x0f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x53, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x73, 0x68, 0x2e, 0x64, 0x65, 0x62, 0x69, 0x74, 0x73, 0x63, 0x2e, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x53, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x1a, 0xe8, 0x02, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x75, 0x70, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x03, 0x52, 0x0c, 0x72, 0x75, 0x70,
	0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78,
	0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x78, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x78, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x73, 0x63, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x05, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x53, 0x63, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x75, 0x70, 0x65, 0x65, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x73, 0x63, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stashcash_debitsc_proto_rawDescOnce sync.Once
	file_stashcash_debitsc_proto_rawDescData = file_stashcash_debitsc_proto_rawDesc
)

func file_stashcash_debitsc_proto_rawDescGZIP() []byte {
	file_stashcash_debitsc_proto_rawDescOnce.Do(func() {
		file_stashcash_debitsc_proto_rawDescData = protoimpl.X.CompressGZIP(file_stashcash_debitsc_proto_rawDescData)
	})
	return file_stashcash_debitsc_proto_rawDescData
}

var file_stashcash_debitsc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_stashcash_debitsc_proto_goTypes = []interface{}{
	(*DebitScRequest)(nil),       // 0: stashcash.debitsc.debitScRequest
	(*DebitScResponse)(nil),      // 1: stashcash.debitsc.debitScResponse
	(*DebitScResponse_Data)(nil), // 2: stashcash.debitsc.debitScResponse.Data
}
var file_stashcash_debitsc_proto_depIdxs = []int32{
	2, // 0: stashcash.debitsc.debitScResponse.data:type_name -> stashcash.debitsc.debitScResponse.Data
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_stashcash_debitsc_proto_init() }
func file_stashcash_debitsc_proto_init() {
	if File_stashcash_debitsc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stashcash_debitsc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebitScRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stashcash_debitsc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebitScResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stashcash_debitsc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebitScResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_stashcash_debitsc_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_stashcash_debitsc_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_stashcash_debitsc_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stashcash_debitsc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_stashcash_debitsc_proto_goTypes,
		DependencyIndexes: file_stashcash_debitsc_proto_depIdxs,
		MessageInfos:      file_stashcash_debitsc_proto_msgTypes,
	}.Build()
	File_stashcash_debitsc_proto = out.File
	file_stashcash_debitsc_proto_rawDesc = nil
	file_stashcash_debitsc_proto_goTypes = nil
	file_stashcash_debitsc_proto_depIdxs = nil
}
