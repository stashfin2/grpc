// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.6
// source: kyc.proto

package stashfin_com

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	kyc "stashfin.com/kyc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// KycClient is the client API for Kyc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KycClient interface {
	FetchUanList(ctx context.Context, in *kyc.FetchUanListRequest, opts ...grpc.CallOption) (*kyc.FetchUanListResponse, error)
	FetchEmploymentDetail(ctx context.Context, in *kyc.FetchEmploymentHistoryRequest, opts ...grpc.CallOption) (*kyc.FetchEmploymentHistoryResponse, error)
	GetSelfieTxnId(ctx context.Context, in *kyc.SelfieTxnIdRequest, opts ...grpc.CallOption) (*kyc.SelfieTxnIdResponse, error)
	FaceMatch(ctx context.Context, in *kyc.FaceMatchRequest, opts ...grpc.CallOption) (*kyc.FaceMatchResponse, error)
	PanValidation(ctx context.Context, in *kyc.CustomerPanDetailRequest, opts ...grpc.CallOption) (*kyc.CustomerPanDetailResponse, error)
	GetSelfieRedirectionUrl(ctx context.Context, in *kyc.GetSelfieRedirectionUrlRequest, opts ...grpc.CallOption) (*kyc.GetSelfieRedirectionUrlResponse, error)
	FetchAadhaarByPan(ctx context.Context, in *kyc.FetchAadhaarByPanRequest, opts ...grpc.CallOption) (*kyc.FetchAadhaarByPanResponse, error)
}

type kycClient struct {
	cc grpc.ClientConnInterface
}

func NewKycClient(cc grpc.ClientConnInterface) KycClient {
	return &kycClient{cc}
}

func (c *kycClient) FetchUanList(ctx context.Context, in *kyc.FetchUanListRequest, opts ...grpc.CallOption) (*kyc.FetchUanListResponse, error) {
	out := new(kyc.FetchUanListResponse)
	err := c.cc.Invoke(ctx, "/service.kyc/fetchUanList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kycClient) FetchEmploymentDetail(ctx context.Context, in *kyc.FetchEmploymentHistoryRequest, opts ...grpc.CallOption) (*kyc.FetchEmploymentHistoryResponse, error) {
	out := new(kyc.FetchEmploymentHistoryResponse)
	err := c.cc.Invoke(ctx, "/service.kyc/fetchEmploymentDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kycClient) GetSelfieTxnId(ctx context.Context, in *kyc.SelfieTxnIdRequest, opts ...grpc.CallOption) (*kyc.SelfieTxnIdResponse, error) {
	out := new(kyc.SelfieTxnIdResponse)
	err := c.cc.Invoke(ctx, "/service.kyc/getSelfieTxnId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kycClient) FaceMatch(ctx context.Context, in *kyc.FaceMatchRequest, opts ...grpc.CallOption) (*kyc.FaceMatchResponse, error) {
	out := new(kyc.FaceMatchResponse)
	err := c.cc.Invoke(ctx, "/service.kyc/faceMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kycClient) PanValidation(ctx context.Context, in *kyc.CustomerPanDetailRequest, opts ...grpc.CallOption) (*kyc.CustomerPanDetailResponse, error) {
	out := new(kyc.CustomerPanDetailResponse)
	err := c.cc.Invoke(ctx, "/service.kyc/panValidation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kycClient) GetSelfieRedirectionUrl(ctx context.Context, in *kyc.GetSelfieRedirectionUrlRequest, opts ...grpc.CallOption) (*kyc.GetSelfieRedirectionUrlResponse, error) {
	out := new(kyc.GetSelfieRedirectionUrlResponse)
	err := c.cc.Invoke(ctx, "/service.kyc/getSelfieRedirectionUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kycClient) FetchAadhaarByPan(ctx context.Context, in *kyc.FetchAadhaarByPanRequest, opts ...grpc.CallOption) (*kyc.FetchAadhaarByPanResponse, error) {
	out := new(kyc.FetchAadhaarByPanResponse)
	err := c.cc.Invoke(ctx, "/service.kyc/fetchAadhaarByPan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KycServer is the server API for Kyc service.
// All implementations must embed UnimplementedKycServer
// for forward compatibility
type KycServer interface {
	FetchUanList(context.Context, *kyc.FetchUanListRequest) (*kyc.FetchUanListResponse, error)
	FetchEmploymentDetail(context.Context, *kyc.FetchEmploymentHistoryRequest) (*kyc.FetchEmploymentHistoryResponse, error)
	GetSelfieTxnId(context.Context, *kyc.SelfieTxnIdRequest) (*kyc.SelfieTxnIdResponse, error)
	FaceMatch(context.Context, *kyc.FaceMatchRequest) (*kyc.FaceMatchResponse, error)
	PanValidation(context.Context, *kyc.CustomerPanDetailRequest) (*kyc.CustomerPanDetailResponse, error)
	GetSelfieRedirectionUrl(context.Context, *kyc.GetSelfieRedirectionUrlRequest) (*kyc.GetSelfieRedirectionUrlResponse, error)
	FetchAadhaarByPan(context.Context, *kyc.FetchAadhaarByPanRequest) (*kyc.FetchAadhaarByPanResponse, error)
	mustEmbedUnimplementedKycServer()
}

// UnimplementedKycServer must be embedded to have forward compatible implementations.
type UnimplementedKycServer struct {
}

func (UnimplementedKycServer) FetchUanList(context.Context, *kyc.FetchUanListRequest) (*kyc.FetchUanListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchUanList not implemented")
}
func (UnimplementedKycServer) FetchEmploymentDetail(context.Context, *kyc.FetchEmploymentHistoryRequest) (*kyc.FetchEmploymentHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchEmploymentDetail not implemented")
}
func (UnimplementedKycServer) GetSelfieTxnId(context.Context, *kyc.SelfieTxnIdRequest) (*kyc.SelfieTxnIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfieTxnId not implemented")
}
func (UnimplementedKycServer) FaceMatch(context.Context, *kyc.FaceMatchRequest) (*kyc.FaceMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FaceMatch not implemented")
}
func (UnimplementedKycServer) PanValidation(context.Context, *kyc.CustomerPanDetailRequest) (*kyc.CustomerPanDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PanValidation not implemented")
}
func (UnimplementedKycServer) GetSelfieRedirectionUrl(context.Context, *kyc.GetSelfieRedirectionUrlRequest) (*kyc.GetSelfieRedirectionUrlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfieRedirectionUrl not implemented")
}
func (UnimplementedKycServer) FetchAadhaarByPan(context.Context, *kyc.FetchAadhaarByPanRequest) (*kyc.FetchAadhaarByPanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAadhaarByPan not implemented")
}
func (UnimplementedKycServer) mustEmbedUnimplementedKycServer() {}

// UnsafeKycServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KycServer will
// result in compilation errors.
type UnsafeKycServer interface {
	mustEmbedUnimplementedKycServer()
}

func RegisterKycServer(s grpc.ServiceRegistrar, srv KycServer) {
	s.RegisterService(&Kyc_ServiceDesc, srv)
}

func _Kyc_FetchUanList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(kyc.FetchUanListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KycServer).FetchUanList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.kyc/fetchUanList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KycServer).FetchUanList(ctx, req.(*kyc.FetchUanListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kyc_FetchEmploymentDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(kyc.FetchEmploymentHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KycServer).FetchEmploymentDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.kyc/fetchEmploymentDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KycServer).FetchEmploymentDetail(ctx, req.(*kyc.FetchEmploymentHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kyc_GetSelfieTxnId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(kyc.SelfieTxnIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KycServer).GetSelfieTxnId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.kyc/getSelfieTxnId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KycServer).GetSelfieTxnId(ctx, req.(*kyc.SelfieTxnIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kyc_FaceMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(kyc.FaceMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KycServer).FaceMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.kyc/faceMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KycServer).FaceMatch(ctx, req.(*kyc.FaceMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kyc_PanValidation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(kyc.CustomerPanDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KycServer).PanValidation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.kyc/panValidation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KycServer).PanValidation(ctx, req.(*kyc.CustomerPanDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kyc_GetSelfieRedirectionUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(kyc.GetSelfieRedirectionUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KycServer).GetSelfieRedirectionUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.kyc/getSelfieRedirectionUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KycServer).GetSelfieRedirectionUrl(ctx, req.(*kyc.GetSelfieRedirectionUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kyc_FetchAadhaarByPan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(kyc.FetchAadhaarByPanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KycServer).FetchAadhaarByPan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.kyc/fetchAadhaarByPan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KycServer).FetchAadhaarByPan(ctx, req.(*kyc.FetchAadhaarByPanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Kyc_ServiceDesc is the grpc.ServiceDesc for Kyc service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Kyc_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "service.kyc",
	HandlerType: (*KycServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "fetchUanList",
			Handler:    _Kyc_FetchUanList_Handler,
		},
		{
			MethodName: "fetchEmploymentDetail",
			Handler:    _Kyc_FetchEmploymentDetail_Handler,
		},
		{
			MethodName: "getSelfieTxnId",
			Handler:    _Kyc_GetSelfieTxnId_Handler,
		},
		{
			MethodName: "faceMatch",
			Handler:    _Kyc_FaceMatch_Handler,
		},
		{
			MethodName: "panValidation",
			Handler:    _Kyc_PanValidation_Handler,
		},
		{
			MethodName: "getSelfieRedirectionUrl",
			Handler:    _Kyc_GetSelfieRedirectionUrl_Handler,
		},
		{
			MethodName: "fetchAadhaarByPan",
			Handler:    _Kyc_FetchAadhaarByPan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kyc.proto",
}
