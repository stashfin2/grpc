// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: upi/getprofile.proto

package upi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile    string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	DeviceId  string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ProfileId string `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *GetProfileRequest) Reset() {
	*x = GetProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upi_getprofile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileRequest) ProtoMessage() {}

func (x *GetProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upi_getprofile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileRequest.ProtoReflect.Descriptor instead.
func (*GetProfileRequest) Descriptor() ([]byte, []int) {
	return file_upi_getprofile_proto_rawDescGZIP(), []int{0}
}

func (x *GetProfileRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetProfileRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetProfileRequest) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

type GetProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success          *bool          `protobuf:"varint,1,opt,name=Success,proto3,oneof" json:"Success,omitempty"`
	Response         *string        `protobuf:"bytes,2,opt,name=response,proto3,oneof" json:"response,omitempty"`
	ActCode          *string        `protobuf:"bytes,3,opt,name=ActCode,proto3,oneof" json:"ActCode,omitempty"`
	Message          *string        `protobuf:"bytes,4,opt,name=message,proto3,oneof" json:"message,omitempty"`
	BankRRN          *string        `protobuf:"bytes,5,opt,name=BankRRN,proto3,oneof" json:"BankRRN,omitempty"`
	UpiTranlogId     *string        `protobuf:"bytes,6,opt,name=UpiTranlogId,proto3,oneof" json:"UpiTranlogId,omitempty"`
	UserProfile      *string        `protobuf:"bytes,7,opt,name=UserProfile,proto3,oneof" json:"UserProfile,omitempty"`
	MobileAppData    *MobileAppData `protobuf:"bytes,8,opt,name=mobileAppData,proto3,oneof" json:"mobileAppData,omitempty"`
	SeqNo            *string        `protobuf:"bytes,9,opt,name=SeqNo,proto3,oneof" json:"SeqNo,omitempty"`
	PayerRespCode    *string        `protobuf:"bytes,10,opt,name=PayerRespCode,proto3,oneof" json:"PayerRespCode,omitempty"`
	PayeeRespCode    *string        `protobuf:"bytes,11,opt,name=PayeeRespCode,proto3,oneof" json:"PayeeRespCode,omitempty"`
	PayerRevRespCode *string        `protobuf:"bytes,12,opt,name=PayerRevRespCode,proto3,oneof" json:"PayerRevRespCode,omitempty"`
	PayeeRevRespCode *string        `protobuf:"bytes,13,opt,name=PayeeRevRespCode,proto3,oneof" json:"PayeeRevRespCode,omitempty"`
}

func (x *GetProfileResponse) Reset() {
	*x = GetProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upi_getprofile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileResponse) ProtoMessage() {}

func (x *GetProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upi_getprofile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileResponse.ProtoReflect.Descriptor instead.
func (*GetProfileResponse) Descriptor() ([]byte, []int) {
	return file_upi_getprofile_proto_rawDescGZIP(), []int{1}
}

func (x *GetProfileResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *GetProfileResponse) GetResponse() string {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return ""
}

func (x *GetProfileResponse) GetActCode() string {
	if x != nil && x.ActCode != nil {
		return *x.ActCode
	}
	return ""
}

func (x *GetProfileResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GetProfileResponse) GetBankRRN() string {
	if x != nil && x.BankRRN != nil {
		return *x.BankRRN
	}
	return ""
}

func (x *GetProfileResponse) GetUpiTranlogId() string {
	if x != nil && x.UpiTranlogId != nil {
		return *x.UpiTranlogId
	}
	return ""
}

func (x *GetProfileResponse) GetUserProfile() string {
	if x != nil && x.UserProfile != nil {
		return *x.UserProfile
	}
	return ""
}

func (x *GetProfileResponse) GetMobileAppData() *MobileAppData {
	if x != nil {
		return x.MobileAppData
	}
	return nil
}

func (x *GetProfileResponse) GetSeqNo() string {
	if x != nil && x.SeqNo != nil {
		return *x.SeqNo
	}
	return ""
}

func (x *GetProfileResponse) GetPayerRespCode() string {
	if x != nil && x.PayerRespCode != nil {
		return *x.PayerRespCode
	}
	return ""
}

func (x *GetProfileResponse) GetPayeeRespCode() string {
	if x != nil && x.PayeeRespCode != nil {
		return *x.PayeeRespCode
	}
	return ""
}

func (x *GetProfileResponse) GetPayerRevRespCode() string {
	if x != nil && x.PayerRevRespCode != nil {
		return *x.PayerRevRespCode
	}
	return ""
}

func (x *GetProfileResponse) GetPayeeRevRespCode() string {
	if x != nil && x.PayeeRevRespCode != nil {
		return *x.PayeeRevRespCode
	}
	return ""
}

type MobileAppData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUser *string  `protobuf:"bytes,1,opt,name=merchantUser,proto3,oneof" json:"merchantUser,omitempty"`
	Name         *string  `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile       *string  `protobuf:"bytes,3,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Details      *Details `protobuf:"bytes,4,opt,name=details,proto3,oneof" json:"details,omitempty"`
	UserType     *string  `protobuf:"bytes,5,opt,name=userType,proto3,oneof" json:"userType,omitempty"`
	Status       *string  `protobuf:"bytes,6,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *MobileAppData) Reset() {
	*x = MobileAppData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upi_getprofile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobileAppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobileAppData) ProtoMessage() {}

func (x *MobileAppData) ProtoReflect() protoreflect.Message {
	mi := &file_upi_getprofile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobileAppData.ProtoReflect.Descriptor instead.
func (*MobileAppData) Descriptor() ([]byte, []int) {
	return file_upi_getprofile_proto_rawDescGZIP(), []int{2}
}

func (x *MobileAppData) GetMerchantUser() string {
	if x != nil && x.MerchantUser != nil {
		return *x.MerchantUser
	}
	return ""
}

func (x *MobileAppData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MobileAppData) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *MobileAppData) GetDetails() *Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MobileAppData) GetUserType() string {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return ""
}

func (x *MobileAppData) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

// Details nested message
type Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*FinancialAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *Details) Reset() {
	*x = Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upi_getprofile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Details) ProtoMessage() {}

func (x *Details) ProtoReflect() protoreflect.Message {
	mi := &file_upi_getprofile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Details.ProtoReflect.Descriptor instead.
func (*Details) Descriptor() ([]byte, []int) {
	return file_upi_getprofile_proto_rawDescGZIP(), []int{3}
}

func (x *Details) GetAccounts() []*FinancialAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// Account nested message
type FinancialAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegMobFormat    *string           `protobuf:"bytes,1,opt,name=reg_mob_format,json=regMobFormat,proto3,oneof" json:"reg_mob_format,omitempty"`
	DefaultVa       *string           `protobuf:"bytes,2,opt,name=default_va,json=defaultVa,proto3,oneof" json:"default_va,omitempty"`
	Mmid            *string           `protobuf:"bytes,3,opt,name=mmid,proto3,oneof" json:"mmid,omitempty"`
	GlobalStartDate *string           `protobuf:"bytes,4,opt,name=global_start_date,json=globalStartDate,proto3,oneof" json:"global_start_date,omitempty"`
	Va              *string           `protobuf:"bytes,5,opt,name=va,proto3,oneof" json:"va,omitempty"`
	DefaultDebit    *string           `protobuf:"bytes,6,opt,name=default_debit,json=defaultDebit,proto3,oneof" json:"default_debit,omitempty"`
	GlobalEndDate   *string           `protobuf:"bytes,7,opt,name=global_end_date,json=globalEndDate,proto3,oneof" json:"global_end_date,omitempty"`
	AadharOtp       *string           `protobuf:"bytes,8,opt,name=aadhar_otp,json=aadharOtp,proto3,oneof" json:"aadhar_otp,omitempty"`
	MerchantGenre   *string           `protobuf:"bytes,9,opt,name=merchant_genre,json=merchantGenre,proto3,oneof" json:"merchant_genre,omitempty"`
	AccProviderId   *int32            `protobuf:"varint,10,opt,name=acc_provider_id,json=accProviderId,proto3,oneof" json:"acc_provider_id,omitempty"`
	AccRefNumber    *string           `protobuf:"bytes,11,opt,name=accRefNumber,proto3,oneof" json:"accRefNumber,omitempty"`
	Name            *string           `protobuf:"bytes,12,opt,name=name,proto3,oneof" json:"name,omitempty"`
	AllowGlobalTxn  *string           `protobuf:"bytes,13,opt,name=allow_global_txn,json=allowGlobalTxn,proto3,oneof" json:"allow_global_txn,omitempty"`
	AccProviderName *string           `protobuf:"bytes,14,opt,name=acc_provider_name,json=accProviderName,proto3,oneof" json:"acc_provider_name,omitempty"`
	CredsAllowed    *CredsAllowedList `protobuf:"bytes,15,opt,name=CredsAllowed,proto3,oneof" json:"CredsAllowed,omitempty"`
	Ifsc            *string           `protobuf:"bytes,16,opt,name=ifsc,proto3,oneof" json:"ifsc,omitempty"`
	AccType         *string           `protobuf:"bytes,17,opt,name=accType,proto3,oneof" json:"accType,omitempty"`
	DefaultCredit   *string           `protobuf:"bytes,18,opt,name=default_credit,json=defaultCredit,proto3,oneof" json:"default_credit,omitempty"`
	Account         *string           `protobuf:"bytes,19,opt,name=account,proto3,oneof" json:"account,omitempty"`
	Status          *string           `protobuf:"bytes,20,opt,name=status,proto3,oneof" json:"status,omitempty"`
	OnboardingType  *string           `protobuf:"bytes,21,opt,name=onboarding_type,json=onboardingType,proto3,oneof" json:"onboarding_type,omitempty"`
	UpiLiteLrn      *string           `protobuf:"bytes,22,opt,name=upi_lite_lrn,json=upiLiteLrn,proto3,oneof" json:"upi_lite_lrn,omitempty"`
	UpiLiteStatus   *string           `protobuf:"bytes,23,opt,name=upi_lite_status,json=upiLiteStatus,proto3,oneof" json:"upi_lite_status,omitempty"`
	ChannelCode     *string           `protobuf:"bytes,24,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	Mobile          *string           `protobuf:"bytes,25,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	AccIdentifier   *string           `protobuf:"bytes,26,opt,name=acc_identifier,json=accIdentifier,proto3,oneof" json:"acc_identifier,omitempty"`
}

func (x *FinancialAccount) Reset() {
	*x = FinancialAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upi_getprofile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinancialAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinancialAccount) ProtoMessage() {}

func (x *FinancialAccount) ProtoReflect() protoreflect.Message {
	mi := &file_upi_getprofile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinancialAccount.ProtoReflect.Descriptor instead.
func (*FinancialAccount) Descriptor() ([]byte, []int) {
	return file_upi_getprofile_proto_rawDescGZIP(), []int{4}
}

func (x *FinancialAccount) GetRegMobFormat() string {
	if x != nil && x.RegMobFormat != nil {
		return *x.RegMobFormat
	}
	return ""
}

func (x *FinancialAccount) GetDefaultVa() string {
	if x != nil && x.DefaultVa != nil {
		return *x.DefaultVa
	}
	return ""
}

func (x *FinancialAccount) GetMmid() string {
	if x != nil && x.Mmid != nil {
		return *x.Mmid
	}
	return ""
}

func (x *FinancialAccount) GetGlobalStartDate() string {
	if x != nil && x.GlobalStartDate != nil {
		return *x.GlobalStartDate
	}
	return ""
}

func (x *FinancialAccount) GetVa() string {
	if x != nil && x.Va != nil {
		return *x.Va
	}
	return ""
}

func (x *FinancialAccount) GetDefaultDebit() string {
	if x != nil && x.DefaultDebit != nil {
		return *x.DefaultDebit
	}
	return ""
}

func (x *FinancialAccount) GetGlobalEndDate() string {
	if x != nil && x.GlobalEndDate != nil {
		return *x.GlobalEndDate
	}
	return ""
}

func (x *FinancialAccount) GetAadharOtp() string {
	if x != nil && x.AadharOtp != nil {
		return *x.AadharOtp
	}
	return ""
}

func (x *FinancialAccount) GetMerchantGenre() string {
	if x != nil && x.MerchantGenre != nil {
		return *x.MerchantGenre
	}
	return ""
}

func (x *FinancialAccount) GetAccProviderId() int32 {
	if x != nil && x.AccProviderId != nil {
		return *x.AccProviderId
	}
	return 0
}

func (x *FinancialAccount) GetAccRefNumber() string {
	if x != nil && x.AccRefNumber != nil {
		return *x.AccRefNumber
	}
	return ""
}

func (x *FinancialAccount) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FinancialAccount) GetAllowGlobalTxn() string {
	if x != nil && x.AllowGlobalTxn != nil {
		return *x.AllowGlobalTxn
	}
	return ""
}

func (x *FinancialAccount) GetAccProviderName() string {
	if x != nil && x.AccProviderName != nil {
		return *x.AccProviderName
	}
	return ""
}

func (x *FinancialAccount) GetCredsAllowed() *CredsAllowedList {
	if x != nil {
		return x.CredsAllowed
	}
	return nil
}

func (x *FinancialAccount) GetIfsc() string {
	if x != nil && x.Ifsc != nil {
		return *x.Ifsc
	}
	return ""
}

func (x *FinancialAccount) GetAccType() string {
	if x != nil && x.AccType != nil {
		return *x.AccType
	}
	return ""
}

func (x *FinancialAccount) GetDefaultCredit() string {
	if x != nil && x.DefaultCredit != nil {
		return *x.DefaultCredit
	}
	return ""
}

func (x *FinancialAccount) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *FinancialAccount) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *FinancialAccount) GetOnboardingType() string {
	if x != nil && x.OnboardingType != nil {
		return *x.OnboardingType
	}
	return ""
}

func (x *FinancialAccount) GetUpiLiteLrn() string {
	if x != nil && x.UpiLiteLrn != nil {
		return *x.UpiLiteLrn
	}
	return ""
}

func (x *FinancialAccount) GetUpiLiteStatus() string {
	if x != nil && x.UpiLiteStatus != nil {
		return *x.UpiLiteStatus
	}
	return ""
}

func (x *FinancialAccount) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *FinancialAccount) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *FinancialAccount) GetAccIdentifier() string {
	if x != nil && x.AccIdentifier != nil {
		return *x.AccIdentifier
	}
	return ""
}

// CredsAllowed nested message
type CredsAllowedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Child []*CredChild `protobuf:"bytes,1,rep,name=Child,proto3" json:"Child,omitempty"`
}

func (x *CredsAllowedList) Reset() {
	*x = CredsAllowedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upi_getprofile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredsAllowedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredsAllowedList) ProtoMessage() {}

func (x *CredsAllowedList) ProtoReflect() protoreflect.Message {
	mi := &file_upi_getprofile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredsAllowedList.ProtoReflect.Descriptor instead.
func (*CredsAllowedList) Descriptor() ([]byte, []int) {
	return file_upi_getprofile_proto_rawDescGZIP(), []int{5}
}

func (x *CredsAllowedList) GetChild() []*CredChild {
	if x != nil {
		return x.Child
	}
	return nil
}

// CredChild nested message
type CredChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredsAllowedDLength *string `protobuf:"bytes,1,opt,name=CredsAllowedDLength,proto3,oneof" json:"CredsAllowedDLength,omitempty"`
	CredsAllowedSubType *string `protobuf:"bytes,2,opt,name=CredsAllowedSubType,proto3,oneof" json:"CredsAllowedSubType,omitempty"`
	CredsAllowedType    *string `protobuf:"bytes,3,opt,name=CredsAllowedType,proto3,oneof" json:"CredsAllowedType,omitempty"`
	DLength             *string `protobuf:"bytes,4,opt,name=dLength,proto3,oneof" json:"dLength,omitempty"`
	CredsAllowedDType   *string `protobuf:"bytes,5,opt,name=CredsAllowedDType,proto3,oneof" json:"CredsAllowedDType,omitempty"`
}

func (x *CredChild) Reset() {
	*x = CredChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upi_getprofile_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredChild) ProtoMessage() {}

func (x *CredChild) ProtoReflect() protoreflect.Message {
	mi := &file_upi_getprofile_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredChild.ProtoReflect.Descriptor instead.
func (*CredChild) Descriptor() ([]byte, []int) {
	return file_upi_getprofile_proto_rawDescGZIP(), []int{6}
}

func (x *CredChild) GetCredsAllowedDLength() string {
	if x != nil && x.CredsAllowedDLength != nil {
		return *x.CredsAllowedDLength
	}
	return ""
}

func (x *CredChild) GetCredsAllowedSubType() string {
	if x != nil && x.CredsAllowedSubType != nil {
		return *x.CredsAllowedSubType
	}
	return ""
}

func (x *CredChild) GetCredsAllowedType() string {
	if x != nil && x.CredsAllowedType != nil {
		return *x.CredsAllowedType
	}
	return ""
}

func (x *CredChild) GetDLength() string {
	if x != nil && x.DLength != nil {
		return *x.DLength
	}
	return ""
}

func (x *CredChild) GetCredsAllowedDType() string {
	if x != nil && x.CredsAllowedDType != nil {
		return *x.CredsAllowedDType
	}
	return ""
}

var File_upi_getprofile_proto protoreflect.FileDescriptor

var file_upi_getprofile_proto_rawDesc = []byte{
	0x0a, 0x14, 0x75, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x75, 0x70, 0x69, 0x2e, 0x67, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x67, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0xe6, 0x05, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x41, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x52, 0x4e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x52, 0x4e,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x55, 0x70, 0x69, 0x54, 0x72, 0x61, 0x6e, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0c, 0x55, 0x70, 0x69,
	0x54, 0x72, 0x61, 0x6e, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x0d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x70, 0x69,
	0x2e, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x48, 0x07, 0x52, 0x0d, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x05,
	0x53, 0x65, 0x71, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0d, 0x50, 0x61,
	0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x10, 0x50, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x10, 0x50, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x65, 0x65, 0x52, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x10, 0x50, 0x61, 0x79,
	0x65, 0x65, 0x52, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x41, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x52, 0x4e, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x55, 0x70, 0x69, 0x54, 0x72, 0x61, 0x6e, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x50,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x50, 0x61, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x50, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x50, 0x61, 0x79, 0x65, 0x65, 0x52, 0x65, 0x76,
	0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x0d, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0c, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x70, 0x69,
	0x2e, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x48, 0x03, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x70, 0x69, 0x2e, 0x67, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x22, 0xb5, 0x0b, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x5f, 0x6d, 0x6f,
	0x62, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0c, 0x72, 0x65, 0x67, 0x4d, 0x6f, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6d, 0x6d, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x13, 0x0a, 0x02, 0x76, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x02, 0x76,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x64, 0x65, 0x62, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61,
	0x61, 0x64, 0x68, 0x61, 0x72, 0x5f, 0x6f, 0x74, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x09, 0x61, 0x61, 0x64, 0x68, 0x61, 0x72, 0x4f, 0x74, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x61,
	0x63, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x52,
	0x65, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a,
	0x52, 0x0c, 0x61, 0x63, 0x63, 0x52, 0x65, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0b, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x74, 0x78, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x54, 0x78, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x61, 0x63, 0x63,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x75, 0x70, 0x69, 0x2e, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x0e, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x66, 0x73, 0x63, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x04, 0x69, 0x66, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x10, 0x52, 0x07, 0x61, 0x63, 0x63, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14,
	0x52, 0x0e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x75, 0x70, 0x69, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x5f,
	0x6c, 0x72, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x0a, 0x75, 0x70, 0x69,
	0x4c, 0x69, 0x74, 0x65, 0x4c, 0x72, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x75, 0x70,
	0x69, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x0d, 0x75, 0x70, 0x69, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x18, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x61, 0x63, 0x63, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x67,
	0x5f, 0x6d, 0x6f, 0x62, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d,
	0x6d, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x76, 0x61,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x61, 0x64, 0x68, 0x61,
	0x72, 0x5f, 0x6f, 0x74, 0x70, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x63, 0x63,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x61, 0x63, 0x63, 0x52, 0x65, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x74, 0x78, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x61, 0x63, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x66, 0x73, 0x63, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x61, 0x63, 0x63, 0x54, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x70, 0x69, 0x5f, 0x6c, 0x69,
	0x74, 0x65, 0x5f, 0x6c, 0x72, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x75, 0x70, 0x69, 0x5f, 0x6c,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75,
	0x70, 0x69, 0x2e, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x22, 0xe3,
	0x02, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x35, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x43, 0x72, 0x65,
	0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x13, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x10, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07,
	0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x11, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x43, 0x72, 0x65, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44,
	0x54, 0x79, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_upi_getprofile_proto_rawDescOnce sync.Once
	file_upi_getprofile_proto_rawDescData = file_upi_getprofile_proto_rawDesc
)

func file_upi_getprofile_proto_rawDescGZIP() []byte {
	file_upi_getprofile_proto_rawDescOnce.Do(func() {
		file_upi_getprofile_proto_rawDescData = protoimpl.X.CompressGZIP(file_upi_getprofile_proto_rawDescData)
	})
	return file_upi_getprofile_proto_rawDescData
}

var file_upi_getprofile_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_upi_getprofile_proto_goTypes = []interface{}{
	(*GetProfileRequest)(nil),  // 0: upi.getProfile.getProfileRequest
	(*GetProfileResponse)(nil), // 1: upi.getProfile.getProfileResponse
	(*MobileAppData)(nil),      // 2: upi.getProfile.MobileAppData
	(*Details)(nil),            // 3: upi.getProfile.Details
	(*FinancialAccount)(nil),   // 4: upi.getProfile.FinancialAccount
	(*CredsAllowedList)(nil),   // 5: upi.getProfile.CredsAllowedList
	(*CredChild)(nil),          // 6: upi.getProfile.CredChild
}
var file_upi_getprofile_proto_depIdxs = []int32{
	2, // 0: upi.getProfile.getProfileResponse.mobileAppData:type_name -> upi.getProfile.MobileAppData
	3, // 1: upi.getProfile.MobileAppData.details:type_name -> upi.getProfile.Details
	4, // 2: upi.getProfile.Details.accounts:type_name -> upi.getProfile.FinancialAccount
	5, // 3: upi.getProfile.FinancialAccount.CredsAllowed:type_name -> upi.getProfile.CredsAllowedList
	6, // 4: upi.getProfile.CredsAllowedList.Child:type_name -> upi.getProfile.CredChild
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_upi_getprofile_proto_init() }
func file_upi_getprofile_proto_init() {
	if File_upi_getprofile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_upi_getprofile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upi_getprofile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upi_getprofile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobileAppData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upi_getprofile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upi_getprofile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinancialAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upi_getprofile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredsAllowedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upi_getprofile_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_upi_getprofile_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_upi_getprofile_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_upi_getprofile_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_upi_getprofile_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_upi_getprofile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_upi_getprofile_proto_goTypes,
		DependencyIndexes: file_upi_getprofile_proto_depIdxs,
		MessageInfos:      file_upi_getprofile_proto_msgTypes,
	}.Build()
	File_upi_getprofile_proto = out.File
	file_upi_getprofile_proto_rawDesc = nil
	file_upi_getprofile_proto_goTypes = nil
	file_upi_getprofile_proto_depIdxs = nil
}
